/* jnuy.h
   Generated by wsdl2h 2.8.14 from jnuy.wsdl and typemap.dat
   2013-03-18 07:18:50 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2013 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on jnuy.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://jinanwater.cn/                                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// dom.h declares the DOM xsd__anyType object (compiler and link with dom.cpp)
#import "dom.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://jinanwater.cn/"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://jinanwater.cn/"
//gsoap ns1   schema namespace:	http://jinanwater.cn/
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Primitive built-in type "xs:decimal"
typedef char* xsd__decimal;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://jinanwater.cn/                                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://jinanwater.cn/                                                    *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://jinanwater.cn/":GetTime

/// "http://jinanwater.cn/":GetTime is a complexType.
struct _ns1__GetTime
{
};


/// Top-level root element "http://jinanwater.cn/":GetTimeResponse

/// "http://jinanwater.cn/":GetTimeResponse is a complexType.
struct _ns1__GetTimeResponse
{
/// Element GetTimeResult of type xs:long.
    LONG64                               GetTimeResult                  1;	///< Required element.
};


/// Top-level root element "http://jinanwater.cn/":GetDNS

/// "http://jinanwater.cn/":GetDNS is a complexType.
struct _ns1__GetDNS
{
};


/// Top-level root element "http://jinanwater.cn/":GetDNSResponse

/// "http://jinanwater.cn/":GetDNSResponse is a complexType.
struct _ns1__GetDNSResponse
{
/// Element GetDNSResult of type xs:string.
    char*                                GetDNSResult                   0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":GetHostInfo

/// "http://jinanwater.cn/":GetHostInfo is a complexType.
struct _ns1__GetHostInfo
{
};


/// Top-level root element "http://jinanwater.cn/":GetHostInfoResponse

/// "http://jinanwater.cn/":GetHostInfoResponse is a complexType.
struct _ns1__GetHostInfoResponse
{
    struct _ns1__GetHostInfoResponse_GetHostInfoResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *GetHostInfoResult              0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":CheckSHA1

/// "http://jinanwater.cn/":CheckSHA1 is a complexType.
struct _ns1__CheckSHA1
{
/// Element Text of type xs:string.
    char*                                Text                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":CheckSHA1Response

/// "http://jinanwater.cn/":CheckSHA1Response is a complexType.
struct _ns1__CheckSHA1Response
{
    struct _ns1__CheckSHA1Response_CheckSHA1Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *CheckSHA1Result                0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":ToBASE64

/// "http://jinanwater.cn/":ToBASE64 is a complexType.
struct _ns1__ToBASE64
{
/// Element Text of type xs:string.
    char*                                Text                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":ToBASE64Response

/// "http://jinanwater.cn/":ToBASE64Response is a complexType.
struct _ns1__ToBASE64Response
{
    struct _ns1__ToBASE64Response_ToBASE64Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *ToBASE64Result                 0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":FromBASE64

/// "http://jinanwater.cn/":FromBASE64 is a complexType.
struct _ns1__FromBASE64
{
/// Element Text of type xs:string.
    char*                                Text                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":FromBASE64Response

/// "http://jinanwater.cn/":FromBASE64Response is a complexType.
struct _ns1__FromBASE64Response
{
    struct _ns1__FromBASE64Response_FromBASE64Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *FromBASE64Result               0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbgs

/// "http://jinanwater.cn/":get_hbgs is a complexType.
struct _ns1__get_USCOREhbgs
{
/// Element str of type xs:string.
    char*                                str                            0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbgsResponse

/// "http://jinanwater.cn/":get_hbgsResponse is a complexType.
struct _ns1__get_USCOREhbgsResponse
{
    struct _ns1__get_USCOREhbgsResponse_get_USCOREhbgsResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREhbgsResult           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbwsh

/// "http://jinanwater.cn/":get_hbwsh is a complexType.
struct _ns1__get_USCOREhbwsh
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbwshResponse

/// "http://jinanwater.cn/":get_hbwshResponse is a complexType.
struct _ns1__get_USCOREhbwshResponse
{
    struct _ns1__get_USCOREhbwshResponse_get_USCOREhbwshResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREhbwshResult          0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_mx

/// "http://jinanwater.cn/":get_mx is a complexType.
struct _ns1__get_USCOREmx
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
/// Element smdate1 of type xs:string.
    char*                                smdate1                        0;	///< Optional element.
/// Element smdate2 of type xs:string.
    char*                                smdate2                        0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_mxResponse

/// "http://jinanwater.cn/":get_mxResponse is a complexType.
struct _ns1__get_USCOREmxResponse
{
    struct _ns1__get_USCOREmxResponse_get_USCOREmxResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREmxResult             0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hbwsh_update

/// "http://jinanwater.cn/":hbwsh_update is a complexType.
struct _ns1__hbwsh_USCOREupdate
{
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element zje of type xs:decimal.
    xsd__decimal                         zje                            1;	///< Required element.
/// Element optid of type xs:string.
    char*                                optid                          0;	///< Optional element.
/// Element fs of type xs:string.
    char*                                fs                             0;	///< Optional element.
/// Element xzrq of type xs:dateTime.
    time_t                               xzrq                           1;	///< Required element.
/// Element UserName of type xs:string.
    char*                                UserName                       0;	///< Optional element.
/// Element Password of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hbwsh_updateResponse

/// "http://jinanwater.cn/":hbwsh_updateResponse is a complexType.
struct _ns1__hbwsh_USCOREupdateResponse
{
    struct _ns1__hbwsh_USCOREupdateResponse_hbwsh_USCOREupdateResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *hbwsh_USCOREupdateResult       0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hbtsf_update

/// "http://jinanwater.cn/":hbtsf_update is a complexType.
struct _ns1__hbtsf_USCOREupdate
{
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element zje of type xs:decimal.
    xsd__decimal                         zje                            1;	///< Required element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hbtsf_updateResponse

/// "http://jinanwater.cn/":hbtsf_updateResponse is a complexType.
struct _ns1__hbtsf_USCOREupdateResponse
{
    struct _ns1__hbtsf_USCOREupdateResponse_hbtsf_USCOREupdateResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *hbtsf_USCOREupdateResult       0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":TZ_Day

/// "http://jinanwater.cn/":TZ_Day is a complexType.
struct _ns1__TZ_USCOREDay
{
/// Element smdate of type xs:string.
    char*                                smdate                         0;	///< Optional element.
/// Element Base64 of type xs:string.
    char*                                Base64                         0;	///< Optional element.
/// Element Base64_SHA1 of type xs:string.
    char*                                Base64_USCORESHA1              0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":TZ_DayResponse

/// "http://jinanwater.cn/":TZ_DayResponse is a complexType.
struct _ns1__TZ_USCOREDayResponse
{
    struct _ns1__TZ_USCOREDayResponse_TZ_USCOREDayResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *TZ_USCOREDayResult             0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":TZ_Month

/// "http://jinanwater.cn/":TZ_Month is a complexType.
struct _ns1__TZ_USCOREMonth
{
/// Element smdate of type xs:string.
    char*                                smdate                         0;	///< Optional element.
/// Element Base64 of type xs:string.
    char*                                Base64                         0;	///< Optional element.
/// Element Base64_SHA1 of type xs:string.
    char*                                Base64_USCORESHA1              0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":TZ_MonthResponse

/// "http://jinanwater.cn/":TZ_MonthResponse is a complexType.
struct _ns1__TZ_USCOREMonthResponse
{
    struct _ns1__TZ_USCOREMonthResponse_TZ_USCOREMonthResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *TZ_USCOREMonthResult           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":m_tz_update

/// "http://jinanwater.cn/":m_tz_update is a complexType.
struct _ns1__m_USCOREtz_USCOREupdate
{
/// Element smdate of type xs:string.
    char*                                smdate                         0;	///< Optional element.
/// Element filename of type xs:string.
    char*                                filename                       0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":m_tz_updateResponse

/// "http://jinanwater.cn/":m_tz_updateResponse is a complexType.
struct _ns1__m_USCOREtz_USCOREupdateResponse
{
    struct _ns1__m_USCOREtz_USCOREupdateResponse_m_USCOREtz_USCOREupdateResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *m_USCOREtz_USCOREupdateResult  0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":m_zb_tz_update

/// "http://jinanwater.cn/":m_zb_tz_update is a complexType.
struct _ns1__m_USCOREzb_USCOREtz_USCOREupdate
{
/// Element smdate of type xs:string.
    char*                                smdate                         0;	///< Optional element.
/// Element filename of type xs:string.
    char*                                filename                       0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":m_zb_tz_updateResponse

/// "http://jinanwater.cn/":m_zb_tz_updateResponse is a complexType.
struct _ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse
{
    struct _ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse_m_USCOREzb_USCOREtz_USCOREupdateResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *m_USCOREzb_USCOREtz_USCOREupdateResult 0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbfp

/// "http://jinanwater.cn/":get_hbfp is a complexType.
struct _ns1__get_USCOREhbfp
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbfpResponse

/// "http://jinanwater.cn/":get_hbfpResponse is a complexType.
struct _ns1__get_USCOREhbfpResponse
{
    struct _ns1__get_USCOREhbfpResponse_get_USCOREhbfpResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREhbfpResult           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_yyzd

/// "http://jinanwater.cn/":get_yyzd is a complexType.
struct _ns1__get_USCOREyyzd
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_yyzdResponse

/// "http://jinanwater.cn/":get_yyzdResponse is a complexType.
struct _ns1__get_USCOREyyzdResponse
{
    struct _ns1__get_USCOREyyzdResponse_get_USCOREyyzdResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREyyzdResult           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbwsh_yue

/// "http://jinanwater.cn/":get_hbwsh_yue is a complexType.
struct _ns1__get_USCOREhbwsh_USCOREyue
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbwsh_yueResponse

/// "http://jinanwater.cn/":get_hbwsh_yueResponse is a complexType.
struct _ns1__get_USCOREhbwsh_USCOREyueResponse
{
    struct _ns1__get_USCOREhbwsh_USCOREyueResponse_get_USCOREhbwsh_USCOREyueResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREhbwsh_USCOREyueResult 0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_yue

/// "http://jinanwater.cn/":get_yue is a complexType.
struct _ns1__get_USCOREyue
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_yueResponse

/// "http://jinanwater.cn/":get_yueResponse is a complexType.
struct _ns1__get_USCOREyueResponse
{
    struct _ns1__get_USCOREyueResponse_get_USCOREyueResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREyueResult            0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hbwsh_yue_update

/// "http://jinanwater.cn/":hbwsh_yue_update is a complexType.
struct _ns1__hbwsh_USCOREyue_USCOREupdate
{
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element zje of type xs:decimal.
    xsd__decimal                         zje                            1;	///< Required element.
/// Element optid of type xs:string.
    char*                                optid                          0;	///< Optional element.
/// Element fs of type xs:string.
    char*                                fs                             0;	///< Optional element.
/// Element xzrq of type xs:dateTime.
    time_t                               xzrq                           1;	///< Required element.
/// Element UserName of type xs:string.
    char*                                UserName                       0;	///< Optional element.
/// Element Password of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
/// Element dzid of type xs:string.
    char*                                dzid                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hbwsh_yue_updateResponse

/// "http://jinanwater.cn/":hbwsh_yue_updateResponse is a complexType.
struct _ns1__hbwsh_USCOREyue_USCOREupdateResponse
{
    struct _ns1__hbwsh_USCOREyue_USCOREupdateResponse_hbwsh_USCOREyue_USCOREupdateResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *hbwsh_USCOREyue_USCOREupdateResult 0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hbtsf_yue_update

/// "http://jinanwater.cn/":hbtsf_yue_update is a complexType.
struct _ns1__hbtsf_USCOREyue_USCOREupdate
{
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element zje of type xs:decimal.
    xsd__decimal                         zje                            1;	///< Required element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hbtsf_yue_updateResponse

/// "http://jinanwater.cn/":hbtsf_yue_updateResponse is a complexType.
struct _ns1__hbtsf_USCOREyue_USCOREupdateResponse
{
    struct _ns1__hbtsf_USCOREyue_USCOREupdateResponse_hbtsf_USCOREyue_USCOREupdateResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *hbtsf_USCOREyue_USCOREupdateResult 0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hb_fp_dy_end

/// "http://jinanwater.cn/":hb_fp_dy_end is a complexType.
struct _ns1__hb_USCOREfp_USCOREdy_USCOREend
{
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hb_fp_dy_endResponse

/// "http://jinanwater.cn/":hb_fp_dy_endResponse is a complexType.
struct _ns1__hb_USCOREfp_USCOREdy_USCOREendResponse
{
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREendResponse_hb_USCOREfp_USCOREdy_USCOREendResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *hb_USCOREfp_USCOREdy_USCOREendResult 0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_wsh

/// "http://jinanwater.cn/":get_wsh is a complexType.
struct _ns1__get_USCOREwsh
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_wshResponse

/// "http://jinanwater.cn/":get_wshResponse is a complexType.
struct _ns1__get_USCOREwshResponse
{
    struct _ns1__get_USCOREwshResponse_get_USCOREwshResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREwshResult            0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_zb_mx

/// "http://jinanwater.cn/":get_zb_mx is a complexType.
struct _ns1__get_USCOREzb_USCOREmx
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
/// Element smdate1 of type xs:string.
    char*                                smdate1                        0;	///< Optional element.
/// Element smdate2 of type xs:string.
    char*                                smdate2                        0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_zb_mxResponse

/// "http://jinanwater.cn/":get_zb_mxResponse is a complexType.
struct _ns1__get_USCOREzb_USCOREmxResponse
{
    struct _ns1__get_USCOREzb_USCOREmxResponse_get_USCOREzb_USCOREmxResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREzb_USCOREmxResult    0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":wsh_update

/// "http://jinanwater.cn/":wsh_update is a complexType.
struct _ns1__wsh_USCOREupdate
{
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element zje of type xs:decimal.
    xsd__decimal                         zje                            1;	///< Required element.
/// Element optid of type xs:string.
    char*                                optid                          0;	///< Optional element.
/// Element fs of type xs:string.
    char*                                fs                             0;	///< Optional element.
/// Element xzrq of type xs:dateTime.
    time_t                               xzrq                           1;	///< Required element.
/// Element UserName of type xs:string.
    char*                                UserName                       0;	///< Optional element.
/// Element Password of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":wsh_updateResponse

/// "http://jinanwater.cn/":wsh_updateResponse is a complexType.
struct _ns1__wsh_USCOREupdateResponse
{
    struct _ns1__wsh_USCOREupdateResponse_wsh_USCOREupdateResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *wsh_USCOREupdateResult         0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":tsf_update

/// "http://jinanwater.cn/":tsf_update is a complexType.
struct _ns1__tsf_USCOREupdate
{
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element zje of type xs:decimal.
    xsd__decimal                         zje                            1;	///< Required element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":tsf_updateResponse

/// "http://jinanwater.cn/":tsf_updateResponse is a complexType.
struct _ns1__tsf_USCOREupdateResponse
{
    struct _ns1__tsf_USCOREupdateResponse_tsf_USCOREupdateResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *tsf_USCOREupdateResult         0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":ZB_TZ_Day

/// "http://jinanwater.cn/":ZB_TZ_Day is a complexType.
struct _ns1__ZB_USCORETZ_USCOREDay
{
/// Element smdate of type xs:string.
    char*                                smdate                         0;	///< Optional element.
/// Element Base64 of type xs:string.
    char*                                Base64                         0;	///< Optional element.
/// Element Base64_SHA1 of type xs:string.
    char*                                Base64_USCORESHA1              0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":ZB_TZ_DayResponse

/// "http://jinanwater.cn/":ZB_TZ_DayResponse is a complexType.
struct _ns1__ZB_USCORETZ_USCOREDayResponse
{
    struct _ns1__ZB_USCORETZ_USCOREDayResponse_ZB_USCORETZ_USCOREDayResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *ZB_USCORETZ_USCOREDayResult    0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":ZB_TZ_Month

/// "http://jinanwater.cn/":ZB_TZ_Month is a complexType.
struct _ns1__ZB_USCORETZ_USCOREMonth
{
/// Element smdate of type xs:string.
    char*                                smdate                         0;	///< Optional element.
/// Element Base64 of type xs:string.
    char*                                Base64                         0;	///< Optional element.
/// Element Base64_SHA1 of type xs:string.
    char*                                Base64_USCORESHA1              0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":ZB_TZ_MonthResponse

/// "http://jinanwater.cn/":ZB_TZ_MonthResponse is a complexType.
struct _ns1__ZB_USCORETZ_USCOREMonthResponse
{
    struct _ns1__ZB_USCORETZ_USCOREMonthResponse_ZB_USCORETZ_USCOREMonthResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *ZB_USCORETZ_USCOREMonthResult  0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_zbfp

/// "http://jinanwater.cn/":get_zbfp is a complexType.
struct _ns1__get_USCOREzbfp
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_zbfpResponse

/// "http://jinanwater.cn/":get_zbfpResponse is a complexType.
struct _ns1__get_USCOREzbfpResponse
{
    struct _ns1__get_USCOREzbfpResponse_get_USCOREzbfpResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREzbfpResult           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":fp_dy_end

/// "http://jinanwater.cn/":fp_dy_end is a complexType.
struct _ns1__fp_USCOREdy_USCOREend
{
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":fp_dy_endResponse

/// "http://jinanwater.cn/":fp_dy_endResponse is a complexType.
struct _ns1__fp_USCOREdy_USCOREendResponse
{
    struct _ns1__fp_USCOREdy_USCOREendResponse_fp_USCOREdy_USCOREendResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *fp_USCOREdy_USCOREendResult    0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbgs1

/// "http://jinanwater.cn/":get_hbgs1 is a complexType.
struct _ns1__get_USCOREhbgs1
{
/// Element str of type xs:string.
    char*                                str                            0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbgs1Response

/// "http://jinanwater.cn/":get_hbgs1Response is a complexType.
struct _ns1__get_USCOREhbgs1Response
{
    struct _ns1__get_USCOREhbgs1Response_get_USCOREhbgs1Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREhbgs1Result          0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbwsh1

/// "http://jinanwater.cn/":get_hbwsh1 is a complexType.
struct _ns1__get_USCOREhbwsh1
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbwsh1Response

/// "http://jinanwater.cn/":get_hbwsh1Response is a complexType.
struct _ns1__get_USCOREhbwsh1Response
{
    struct _ns1__get_USCOREhbwsh1Response_get_USCOREhbwsh1Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREhbwsh1Result         0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_mx1

/// "http://jinanwater.cn/":get_mx1 is a complexType.
struct _ns1__get_USCOREmx1
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
/// Element smdate1 of type xs:string.
    char*                                smdate1                        0;	///< Optional element.
/// Element smdate2 of type xs:string.
    char*                                smdate2                        0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_mx1Response

/// "http://jinanwater.cn/":get_mx1Response is a complexType.
struct _ns1__get_USCOREmx1Response
{
    struct _ns1__get_USCOREmx1Response_get_USCOREmx1Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREmx1Result            0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hbwsh_update1

/// "http://jinanwater.cn/":hbwsh_update1 is a complexType.
struct _ns1__hbwsh_USCOREupdate1
{
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element zje of type xs:decimal.
    xsd__decimal                         zje                            1;	///< Required element.
/// Element optid of type xs:string.
    char*                                optid                          0;	///< Optional element.
/// Element fs of type xs:string.
    char*                                fs                             0;	///< Optional element.
/// Element xzrq of type xs:dateTime.
    time_t                               xzrq                           1;	///< Required element.
/// Element UserName of type xs:string.
    char*                                UserName                       0;	///< Optional element.
/// Element Password of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hbwsh_update1Response

/// "http://jinanwater.cn/":hbwsh_update1Response is a complexType.
struct _ns1__hbwsh_USCOREupdate1Response
{
    struct _ns1__hbwsh_USCOREupdate1Response_hbwsh_USCOREupdate1Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *hbwsh_USCOREupdate1Result      0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hbtsf_update1

/// "http://jinanwater.cn/":hbtsf_update1 is a complexType.
struct _ns1__hbtsf_USCOREupdate1
{
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element zje of type xs:decimal.
    xsd__decimal                         zje                            1;	///< Required element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hbtsf_update1Response

/// "http://jinanwater.cn/":hbtsf_update1Response is a complexType.
struct _ns1__hbtsf_USCOREupdate1Response
{
    struct _ns1__hbtsf_USCOREupdate1Response_hbtsf_USCOREupdate1Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *hbtsf_USCOREupdate1Result      0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbfp1

/// "http://jinanwater.cn/":get_hbfp1 is a complexType.
struct _ns1__get_USCOREhbfp1
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_hbfp1Response

/// "http://jinanwater.cn/":get_hbfp1Response is a complexType.
struct _ns1__get_USCOREhbfp1Response
{
    struct _ns1__get_USCOREhbfp1Response_get_USCOREhbfp1Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREhbfp1Result          0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_yyzd1

/// "http://jinanwater.cn/":get_yyzd1 is a complexType.
struct _ns1__get_USCOREyyzd1
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_yyzd1Response

/// "http://jinanwater.cn/":get_yyzd1Response is a complexType.
struct _ns1__get_USCOREyyzd1Response
{
    struct _ns1__get_USCOREyyzd1Response_get_USCOREyyzd1Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREyyzd1Result          0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_yue1

/// "http://jinanwater.cn/":get_yue1 is a complexType.
struct _ns1__get_USCOREyue1
{
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":get_yue1Response

/// "http://jinanwater.cn/":get_yue1Response is a complexType.
struct _ns1__get_USCOREyue1Response
{
    struct _ns1__get_USCOREyue1Response_get_USCOREyue1Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *get_USCOREyue1Result           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hb_fp_dy_end1

/// "http://jinanwater.cn/":hb_fp_dy_end1 is a complexType.
struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1
{
/// Element id of type xs:string.
    char*                                id                             0;	///< Optional element.
/// Element gs of type xs:string.
    char*                                gs                             0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":hb_fp_dy_end1Response

/// "http://jinanwater.cn/":hb_fp_dy_end1Response is a complexType.
struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1Response
{
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1Response_hb_USCOREfp_USCOREdy_USCOREend1Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *hb_USCOREfp_USCOREdy_USCOREend1Result 0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":TZ_Day1

/// "http://jinanwater.cn/":TZ_Day1 is a complexType.
struct _ns1__TZ_USCOREDay1
{
/// Element smdate of type xs:string.
    char*                                smdate                         0;	///< Optional element.
/// Element Base64 of type xs:string.
    char*                                Base64                         0;	///< Optional element.
/// Element Base64_SHA1 of type xs:string.
    char*                                Base64_USCORESHA1              0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":TZ_Day1Response

/// "http://jinanwater.cn/":TZ_Day1Response is a complexType.
struct _ns1__TZ_USCOREDay1Response
{
    struct _ns1__TZ_USCOREDay1Response_TZ_USCOREDay1Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *TZ_USCOREDay1Result            0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":m_tz_update1

/// "http://jinanwater.cn/":m_tz_update1 is a complexType.
struct _ns1__m_USCOREtz_USCOREupdate1
{
/// Element smdate of type xs:string.
    char*                                smdate                         0;	///< Optional element.
/// Element filename of type xs:string.
    char*                                filename                       0;	///< Optional element.
/// Element yyzd of type xs:string.
    char*                                yyzd                           0;	///< Optional element.
};


/// Top-level root element "http://jinanwater.cn/":m_tz_update1Response

/// "http://jinanwater.cn/":m_tz_update1Response is a complexType.
struct _ns1__m_USCOREtz_USCOREupdate1Response
{
    struct _ns1__m_USCOREtz_USCOREupdate1Response_m_USCOREtz_USCOREupdate1Result
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
    }                                   *m_USCOREtz_USCOREupdate1Result 0;	///< Optional element.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://jinanwater.cn/                                                    *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://jinanwater.cn/":long of type xs:long.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://jinanwater.cn/":string of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://jinanwater.cn/                                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap ns1  service name:	yl_USCOREydSoap 
//gsoap ns1  service type:	yl_USCOREydSoap 
//gsoap ns1  service port:	http://public.jinanwater.com.cn/websvr/yhds/yl_yd.asmx 
//gsoap ns1  service namespace:	http://jinanwater.cn/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref yl_USCOREydSoap

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page yl_USCOREydSoap Binding "yl_USCOREydSoap"

@section yl_USCOREydSoap_operations Operations of Binding  "yl_USCOREydSoap"

  - @ref __ns1__GetTime

  - @ref __ns1__GetDNS

  - @ref __ns1__GetHostInfo

  - @ref __ns1__CheckSHA1

  - @ref __ns1__ToBASE64

  - @ref __ns1__FromBASE64

  - @ref __ns1__get_USCOREhbgs

  - @ref __ns1__get_USCOREhbwsh

  - @ref __ns1__get_USCOREmx

  - @ref __ns1__hbwsh_USCOREupdate

  - @ref __ns1__hbtsf_USCOREupdate

  - @ref __ns1__TZ_USCOREDay

  - @ref __ns1__TZ_USCOREMonth

  - @ref __ns1__m_USCOREtz_USCOREupdate

  - @ref __ns1__m_USCOREzb_USCOREtz_USCOREupdate

  - @ref __ns1__get_USCOREhbfp

  - @ref __ns1__get_USCOREyyzd

  - @ref __ns1__get_USCOREhbwsh_USCOREyue

  - @ref __ns1__get_USCOREyue

  - @ref __ns1__hbwsh_USCOREyue_USCOREupdate

  - @ref __ns1__hbtsf_USCOREyue_USCOREupdate

  - @ref __ns1__hb_USCOREfp_USCOREdy_USCOREend

  - @ref __ns1__get_USCOREwsh

  - @ref __ns1__get_USCOREzb_USCOREmx

  - @ref __ns1__wsh_USCOREupdate

  - @ref __ns1__tsf_USCOREupdate

  - @ref __ns1__ZB_USCORETZ_USCOREDay

  - @ref __ns1__ZB_USCORETZ_USCOREMonth

  - @ref __ns1__get_USCOREzbfp

  - @ref __ns1__fp_USCOREdy_USCOREend

  - @ref __ns1__get_USCOREhbgs1

  - @ref __ns1__get_USCOREhbwsh1

  - @ref __ns1__get_USCOREmx1

  - @ref __ns1__hbwsh_USCOREupdate1

  - @ref __ns1__hbtsf_USCOREupdate1

  - @ref __ns1__get_USCOREhbfp1

  - @ref __ns1__get_USCOREyyzd1

  - @ref __ns1__get_USCOREyue1

  - @ref __ns1__hb_USCOREfp_USCOREdy_USCOREend1

  - @ref __ns1__TZ_USCOREDay1

  - @ref __ns1__m_USCOREtz_USCOREupdate1

  - @ref __ns1__GetTime_

  - @ref __ns1__GetDNS_

  - @ref __ns1__GetHostInfo_

  - @ref __ns1__CheckSHA1_

  - @ref __ns1__ToBASE64_

  - @ref __ns1__FromBASE64_

  - @ref __ns1__get_USCOREhbgs_

  - @ref __ns1__get_USCOREhbwsh_

  - @ref __ns1__get_USCOREmx_

  - @ref __ns1__hbwsh_USCOREupdate_

  - @ref __ns1__hbtsf_USCOREupdate_

  - @ref __ns1__TZ_USCOREDay_

  - @ref __ns1__TZ_USCOREMonth_

  - @ref __ns1__m_USCOREtz_USCOREupdate_

  - @ref __ns1__m_USCOREzb_USCOREtz_USCOREupdate_

  - @ref __ns1__get_USCOREhbfp_

  - @ref __ns1__get_USCOREyyzd_

  - @ref __ns1__get_USCOREhbwsh_USCOREyue_

  - @ref __ns1__get_USCOREyue_

  - @ref __ns1__hbwsh_USCOREyue_USCOREupdate_

  - @ref __ns1__hbtsf_USCOREyue_USCOREupdate_

  - @ref __ns1__hb_USCOREfp_USCOREdy_USCOREend_

  - @ref __ns1__get_USCOREwsh_

  - @ref __ns1__get_USCOREzb_USCOREmx_

  - @ref __ns1__wsh_USCOREupdate_

  - @ref __ns1__tsf_USCOREupdate_

  - @ref __ns1__ZB_USCORETZ_USCOREDay_

  - @ref __ns1__ZB_USCORETZ_USCOREMonth_

  - @ref __ns1__get_USCOREzbfp_

  - @ref __ns1__fp_USCOREdy_USCOREend_

  - @ref __ns1__get_USCOREhbgs1_

  - @ref __ns1__get_USCOREhbwsh1_

  - @ref __ns1__get_USCOREmx1_

  - @ref __ns1__hbwsh_USCOREupdate1_

  - @ref __ns1__hbtsf_USCOREupdate1_

  - @ref __ns1__get_USCOREhbfp1_

  - @ref __ns1__get_USCOREyyzd1_

  - @ref __ns1__get_USCOREyue1_

  - @ref __ns1__hb_USCOREfp_USCOREdy_USCOREend1_

  - @ref __ns1__TZ_USCOREDay1_

  - @ref __ns1__m_USCOREtz_USCOREupdate1_

@section yl_USCOREydSoap_ports Endpoints of Binding  "yl_USCOREydSoap"

  - http://public.jinanwater.com.cn/websvr/yhds/yl_yd.asmx

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   yl_USCOREydSoap                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetTime                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetTime" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/GetTime"

  - Addressing input action: "http://jinanwater.cn/GetTime"

  - Addressing output action: "http://jinanwater.cn/GetTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetTime*               ns1__GetTime,
    // output parameters:
    struct _ns1__GetTimeResponse*       ns1__GetTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetTime(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetTime*               ns1__GetTime,
    // output parameters:
    struct _ns1__GetTimeResponse*       ns1__GetTimeResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetTime SOAP
//gsoap ns1  service method-style:	GetTime document
//gsoap ns1  service method-encoding:	GetTime literal
//gsoap ns1  service method-input-action:	GetTime http://jinanwater.cn/GetTime
//gsoap ns1  service method-output-action:	GetTime http://jinanwater.cn/GetTimeResponse
int __ns1__GetTime(
    struct _ns1__GetTime*               ns1__GetTime,	///< Input parameter
    struct _ns1__GetTimeResponse*       ns1__GetTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDNS" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/GetDNS"

  - Addressing input action: "http://jinanwater.cn/GetDNS"

  - Addressing output action: "http://jinanwater.cn/GetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetDNS*                ns1__GetDNS,
    // output parameters:
    struct _ns1__GetDNSResponse*        ns1__GetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDNS(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetDNS*                ns1__GetDNS,
    // output parameters:
    struct _ns1__GetDNSResponse*        ns1__GetDNSResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetDNS SOAP
//gsoap ns1  service method-style:	GetDNS document
//gsoap ns1  service method-encoding:	GetDNS literal
//gsoap ns1  service method-input-action:	GetDNS http://jinanwater.cn/GetDNS
//gsoap ns1  service method-output-action:	GetDNS http://jinanwater.cn/GetDNSResponse
int __ns1__GetDNS(
    struct _ns1__GetDNS*                ns1__GetDNS,	///< Input parameter
    struct _ns1__GetDNSResponse*        ns1__GetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetHostInfo                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetHostInfo" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/GetHostInfo"

  - Addressing input action: "http://jinanwater.cn/GetHostInfo"

  - Addressing output action: "http://jinanwater.cn/GetHostInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetHostInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetHostInfo*           ns1__GetHostInfo,
    // output parameters:
    struct _ns1__GetHostInfoResponse*   ns1__GetHostInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetHostInfo(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetHostInfo*           ns1__GetHostInfo,
    // output parameters:
    struct _ns1__GetHostInfoResponse*   ns1__GetHostInfoResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetHostInfo SOAP
//gsoap ns1  service method-style:	GetHostInfo document
//gsoap ns1  service method-encoding:	GetHostInfo literal
//gsoap ns1  service method-input-action:	GetHostInfo http://jinanwater.cn/GetHostInfo
//gsoap ns1  service method-output-action:	GetHostInfo http://jinanwater.cn/GetHostInfoResponse
int __ns1__GetHostInfo(
    struct _ns1__GetHostInfo*           ns1__GetHostInfo,	///< Input parameter
    struct _ns1__GetHostInfoResponse*   ns1__GetHostInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CheckSHA1                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CheckSHA1" of service binding "yl_USCOREydSoap"

/**

Operation details:
SHA1

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/CheckSHA1"

  - Addressing input action: "http://jinanwater.cn/CheckSHA1"

  - Addressing output action: "http://jinanwater.cn/CheckSHA1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CheckSHA1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__CheckSHA1*             ns1__CheckSHA1,
    // output parameters:
    struct _ns1__CheckSHA1Response*     ns1__CheckSHA1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CheckSHA1(
    struct soap *soap,
    // input parameters:
    struct _ns1__CheckSHA1*             ns1__CheckSHA1,
    // output parameters:
    struct _ns1__CheckSHA1Response*     ns1__CheckSHA1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	CheckSHA1 SOAP
//gsoap ns1  service method-style:	CheckSHA1 document
//gsoap ns1  service method-encoding:	CheckSHA1 literal
//gsoap ns1  service method-input-action:	CheckSHA1 http://jinanwater.cn/CheckSHA1
//gsoap ns1  service method-output-action:	CheckSHA1 http://jinanwater.cn/CheckSHA1Response
int __ns1__CheckSHA1(
    struct _ns1__CheckSHA1*             ns1__CheckSHA1,	///< Input parameter
    struct _ns1__CheckSHA1Response*     ns1__CheckSHA1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ToBASE64                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ToBASE64" of service binding "yl_USCOREydSoap"

/**

Operation details:
Base64

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/ToBASE64"

  - Addressing input action: "http://jinanwater.cn/ToBASE64"

  - Addressing output action: "http://jinanwater.cn/ToBASE64Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ToBASE64(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__ToBASE64*              ns1__ToBASE64,
    // output parameters:
    struct _ns1__ToBASE64Response*      ns1__ToBASE64Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ToBASE64(
    struct soap *soap,
    // input parameters:
    struct _ns1__ToBASE64*              ns1__ToBASE64,
    // output parameters:
    struct _ns1__ToBASE64Response*      ns1__ToBASE64Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	ToBASE64 SOAP
//gsoap ns1  service method-style:	ToBASE64 document
//gsoap ns1  service method-encoding:	ToBASE64 literal
//gsoap ns1  service method-input-action:	ToBASE64 http://jinanwater.cn/ToBASE64
//gsoap ns1  service method-output-action:	ToBASE64 http://jinanwater.cn/ToBASE64Response
int __ns1__ToBASE64(
    struct _ns1__ToBASE64*              ns1__ToBASE64,	///< Input parameter
    struct _ns1__ToBASE64Response*      ns1__ToBASE64Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__FromBASE64                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__FromBASE64" of service binding "yl_USCOREydSoap"

/**

Operation details:
Base64

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/FromBASE64"

  - Addressing input action: "http://jinanwater.cn/FromBASE64"

  - Addressing output action: "http://jinanwater.cn/FromBASE64Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__FromBASE64(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__FromBASE64*            ns1__FromBASE64,
    // output parameters:
    struct _ns1__FromBASE64Response*    ns1__FromBASE64Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__FromBASE64(
    struct soap *soap,
    // input parameters:
    struct _ns1__FromBASE64*            ns1__FromBASE64,
    // output parameters:
    struct _ns1__FromBASE64Response*    ns1__FromBASE64Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	FromBASE64 SOAP
//gsoap ns1  service method-style:	FromBASE64 document
//gsoap ns1  service method-encoding:	FromBASE64 literal
//gsoap ns1  service method-input-action:	FromBASE64 http://jinanwater.cn/FromBASE64
//gsoap ns1  service method-output-action:	FromBASE64 http://jinanwater.cn/FromBASE64Response
int __ns1__FromBASE64(
    struct _ns1__FromBASE64*            ns1__FromBASE64,	///< Input parameter
    struct _ns1__FromBASE64Response*    ns1__FromBASE64Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbgs                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbgs" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbgs"

  - Addressing input action: "http://jinanwater.cn/get_hbgs"

  - Addressing output action: "http://jinanwater.cn/get_hbgsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbgs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbgs*        ns1__get_USCOREhbgs,
    // output parameters:
    struct _ns1__get_USCOREhbgsResponse* ns1__get_USCOREhbgsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbgs(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbgs*        ns1__get_USCOREhbgs,
    // output parameters:
    struct _ns1__get_USCOREhbgsResponse* ns1__get_USCOREhbgsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbgs SOAP
//gsoap ns1  service method-style:	get_USCOREhbgs document
//gsoap ns1  service method-encoding:	get_USCOREhbgs literal
//gsoap ns1  service method-input-action:	get_USCOREhbgs http://jinanwater.cn/get_hbgs
//gsoap ns1  service method-output-action:	get_USCOREhbgs http://jinanwater.cn/get_hbgsResponse
int __ns1__get_USCOREhbgs(
    struct _ns1__get_USCOREhbgs*        ns1__get_USCOREhbgs,	///< Input parameter
    struct _ns1__get_USCOREhbgsResponse* ns1__get_USCOREhbgsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbwsh                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbwsh" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbwsh"

  - Addressing input action: "http://jinanwater.cn/get_hbwsh"

  - Addressing output action: "http://jinanwater.cn/get_hbwshResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbwsh(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbwsh*       ns1__get_USCOREhbwsh,
    // output parameters:
    struct _ns1__get_USCOREhbwshResponse* ns1__get_USCOREhbwshResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbwsh(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbwsh*       ns1__get_USCOREhbwsh,
    // output parameters:
    struct _ns1__get_USCOREhbwshResponse* ns1__get_USCOREhbwshResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbwsh SOAP
//gsoap ns1  service method-style:	get_USCOREhbwsh document
//gsoap ns1  service method-encoding:	get_USCOREhbwsh literal
//gsoap ns1  service method-input-action:	get_USCOREhbwsh http://jinanwater.cn/get_hbwsh
//gsoap ns1  service method-output-action:	get_USCOREhbwsh http://jinanwater.cn/get_hbwshResponse
int __ns1__get_USCOREhbwsh(
    struct _ns1__get_USCOREhbwsh*       ns1__get_USCOREhbwsh,	///< Input parameter
    struct _ns1__get_USCOREhbwshResponse* ns1__get_USCOREhbwshResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREmx                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREmx" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_mx"

  - Addressing input action: "http://jinanwater.cn/get_mx"

  - Addressing output action: "http://jinanwater.cn/get_mxResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREmx(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREmx*          ns1__get_USCOREmx,
    // output parameters:
    struct _ns1__get_USCOREmxResponse*  ns1__get_USCOREmxResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREmx(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREmx*          ns1__get_USCOREmx,
    // output parameters:
    struct _ns1__get_USCOREmxResponse*  ns1__get_USCOREmxResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREmx SOAP
//gsoap ns1  service method-style:	get_USCOREmx document
//gsoap ns1  service method-encoding:	get_USCOREmx literal
//gsoap ns1  service method-input-action:	get_USCOREmx http://jinanwater.cn/get_mx
//gsoap ns1  service method-output-action:	get_USCOREmx http://jinanwater.cn/get_mxResponse
int __ns1__get_USCOREmx(
    struct _ns1__get_USCOREmx*          ns1__get_USCOREmx,	///< Input parameter
    struct _ns1__get_USCOREmxResponse*  ns1__get_USCOREmxResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hbwsh_USCOREupdate                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hbwsh_USCOREupdate" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hbwsh_update"

  - Addressing input action: "http://jinanwater.cn/hbwsh_update"

  - Addressing output action: "http://jinanwater.cn/hbwsh_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hbwsh_USCOREupdate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hbwsh_USCOREupdate*    ns1__hbwsh_USCOREupdate,
    // output parameters:
    struct _ns1__hbwsh_USCOREupdateResponse* ns1__hbwsh_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hbwsh_USCOREupdate(
    struct soap *soap,
    // input parameters:
    struct _ns1__hbwsh_USCOREupdate*    ns1__hbwsh_USCOREupdate,
    // output parameters:
    struct _ns1__hbwsh_USCOREupdateResponse* ns1__hbwsh_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hbwsh_USCOREupdate SOAP
//gsoap ns1  service method-style:	hbwsh_USCOREupdate document
//gsoap ns1  service method-encoding:	hbwsh_USCOREupdate literal
//gsoap ns1  service method-input-action:	hbwsh_USCOREupdate http://jinanwater.cn/hbwsh_update
//gsoap ns1  service method-output-action:	hbwsh_USCOREupdate http://jinanwater.cn/hbwsh_updateResponse
int __ns1__hbwsh_USCOREupdate(
    struct _ns1__hbwsh_USCOREupdate*    ns1__hbwsh_USCOREupdate,	///< Input parameter
    struct _ns1__hbwsh_USCOREupdateResponse* ns1__hbwsh_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hbtsf_USCOREupdate                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hbtsf_USCOREupdate" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hbtsf_update"

  - Addressing input action: "http://jinanwater.cn/hbtsf_update"

  - Addressing output action: "http://jinanwater.cn/hbtsf_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hbtsf_USCOREupdate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hbtsf_USCOREupdate*    ns1__hbtsf_USCOREupdate,
    // output parameters:
    struct _ns1__hbtsf_USCOREupdateResponse* ns1__hbtsf_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hbtsf_USCOREupdate(
    struct soap *soap,
    // input parameters:
    struct _ns1__hbtsf_USCOREupdate*    ns1__hbtsf_USCOREupdate,
    // output parameters:
    struct _ns1__hbtsf_USCOREupdateResponse* ns1__hbtsf_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hbtsf_USCOREupdate SOAP
//gsoap ns1  service method-style:	hbtsf_USCOREupdate document
//gsoap ns1  service method-encoding:	hbtsf_USCOREupdate literal
//gsoap ns1  service method-input-action:	hbtsf_USCOREupdate http://jinanwater.cn/hbtsf_update
//gsoap ns1  service method-output-action:	hbtsf_USCOREupdate http://jinanwater.cn/hbtsf_updateResponse
int __ns1__hbtsf_USCOREupdate(
    struct _ns1__hbtsf_USCOREupdate*    ns1__hbtsf_USCOREupdate,	///< Input parameter
    struct _ns1__hbtsf_USCOREupdateResponse* ns1__hbtsf_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__TZ_USCOREDay                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__TZ_USCOREDay" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/TZ_Day"

  - Addressing input action: "http://jinanwater.cn/TZ_Day"

  - Addressing output action: "http://jinanwater.cn/TZ_DayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__TZ_USCOREDay(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__TZ_USCOREDay*          ns1__TZ_USCOREDay,
    // output parameters:
    struct _ns1__TZ_USCOREDayResponse*  ns1__TZ_USCOREDayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__TZ_USCOREDay(
    struct soap *soap,
    // input parameters:
    struct _ns1__TZ_USCOREDay*          ns1__TZ_USCOREDay,
    // output parameters:
    struct _ns1__TZ_USCOREDayResponse*  ns1__TZ_USCOREDayResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	TZ_USCOREDay SOAP
//gsoap ns1  service method-style:	TZ_USCOREDay document
//gsoap ns1  service method-encoding:	TZ_USCOREDay literal
//gsoap ns1  service method-input-action:	TZ_USCOREDay http://jinanwater.cn/TZ_Day
//gsoap ns1  service method-output-action:	TZ_USCOREDay http://jinanwater.cn/TZ_DayResponse
int __ns1__TZ_USCOREDay(
    struct _ns1__TZ_USCOREDay*          ns1__TZ_USCOREDay,	///< Input parameter
    struct _ns1__TZ_USCOREDayResponse*  ns1__TZ_USCOREDayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__TZ_USCOREMonth                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__TZ_USCOREMonth" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/TZ_Month"

  - Addressing input action: "http://jinanwater.cn/TZ_Month"

  - Addressing output action: "http://jinanwater.cn/TZ_MonthResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__TZ_USCOREMonth(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__TZ_USCOREMonth*        ns1__TZ_USCOREMonth,
    // output parameters:
    struct _ns1__TZ_USCOREMonthResponse* ns1__TZ_USCOREMonthResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__TZ_USCOREMonth(
    struct soap *soap,
    // input parameters:
    struct _ns1__TZ_USCOREMonth*        ns1__TZ_USCOREMonth,
    // output parameters:
    struct _ns1__TZ_USCOREMonthResponse* ns1__TZ_USCOREMonthResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	TZ_USCOREMonth SOAP
//gsoap ns1  service method-style:	TZ_USCOREMonth document
//gsoap ns1  service method-encoding:	TZ_USCOREMonth literal
//gsoap ns1  service method-input-action:	TZ_USCOREMonth http://jinanwater.cn/TZ_Month
//gsoap ns1  service method-output-action:	TZ_USCOREMonth http://jinanwater.cn/TZ_MonthResponse
int __ns1__TZ_USCOREMonth(
    struct _ns1__TZ_USCOREMonth*        ns1__TZ_USCOREMonth,	///< Input parameter
    struct _ns1__TZ_USCOREMonthResponse* ns1__TZ_USCOREMonthResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__m_USCOREtz_USCOREupdate                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__m_USCOREtz_USCOREupdate" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/m_tz_update"

  - Addressing input action: "http://jinanwater.cn/m_tz_update"

  - Addressing output action: "http://jinanwater.cn/m_tz_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__m_USCOREtz_USCOREupdate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__m_USCOREtz_USCOREupdate* ns1__m_USCOREtz_USCOREupdate,
    // output parameters:
    struct _ns1__m_USCOREtz_USCOREupdateResponse* ns1__m_USCOREtz_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__m_USCOREtz_USCOREupdate(
    struct soap *soap,
    // input parameters:
    struct _ns1__m_USCOREtz_USCOREupdate* ns1__m_USCOREtz_USCOREupdate,
    // output parameters:
    struct _ns1__m_USCOREtz_USCOREupdateResponse* ns1__m_USCOREtz_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	m_USCOREtz_USCOREupdate SOAP
//gsoap ns1  service method-style:	m_USCOREtz_USCOREupdate document
//gsoap ns1  service method-encoding:	m_USCOREtz_USCOREupdate literal
//gsoap ns1  service method-input-action:	m_USCOREtz_USCOREupdate http://jinanwater.cn/m_tz_update
//gsoap ns1  service method-output-action:	m_USCOREtz_USCOREupdate http://jinanwater.cn/m_tz_updateResponse
int __ns1__m_USCOREtz_USCOREupdate(
    struct _ns1__m_USCOREtz_USCOREupdate* ns1__m_USCOREtz_USCOREupdate,	///< Input parameter
    struct _ns1__m_USCOREtz_USCOREupdateResponse* ns1__m_USCOREtz_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__m_USCOREzb_USCOREtz_USCOREupdate                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__m_USCOREzb_USCOREtz_USCOREupdate" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/m_zb_tz_update"

  - Addressing input action: "http://jinanwater.cn/m_zb_tz_update"

  - Addressing output action: "http://jinanwater.cn/m_zb_tz_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__m_USCOREzb_USCOREtz_USCOREupdate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__m_USCOREzb_USCOREtz_USCOREupdate* ns1__m_USCOREzb_USCOREtz_USCOREupdate,
    // output parameters:
    struct _ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse* ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__m_USCOREzb_USCOREtz_USCOREupdate(
    struct soap *soap,
    // input parameters:
    struct _ns1__m_USCOREzb_USCOREtz_USCOREupdate* ns1__m_USCOREzb_USCOREtz_USCOREupdate,
    // output parameters:
    struct _ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse* ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	m_USCOREzb_USCOREtz_USCOREupdate SOAP
//gsoap ns1  service method-style:	m_USCOREzb_USCOREtz_USCOREupdate document
//gsoap ns1  service method-encoding:	m_USCOREzb_USCOREtz_USCOREupdate literal
//gsoap ns1  service method-input-action:	m_USCOREzb_USCOREtz_USCOREupdate http://jinanwater.cn/m_zb_tz_update
//gsoap ns1  service method-output-action:	m_USCOREzb_USCOREtz_USCOREupdate http://jinanwater.cn/m_zb_tz_updateResponse
int __ns1__m_USCOREzb_USCOREtz_USCOREupdate(
    struct _ns1__m_USCOREzb_USCOREtz_USCOREupdate* ns1__m_USCOREzb_USCOREtz_USCOREupdate,	///< Input parameter
    struct _ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse* ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbfp                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbfp" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbfp"

  - Addressing input action: "http://jinanwater.cn/get_hbfp"

  - Addressing output action: "http://jinanwater.cn/get_hbfpResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbfp(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbfp*        ns1__get_USCOREhbfp,
    // output parameters:
    struct _ns1__get_USCOREhbfpResponse* ns1__get_USCOREhbfpResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbfp(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbfp*        ns1__get_USCOREhbfp,
    // output parameters:
    struct _ns1__get_USCOREhbfpResponse* ns1__get_USCOREhbfpResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbfp SOAP
//gsoap ns1  service method-style:	get_USCOREhbfp document
//gsoap ns1  service method-encoding:	get_USCOREhbfp literal
//gsoap ns1  service method-input-action:	get_USCOREhbfp http://jinanwater.cn/get_hbfp
//gsoap ns1  service method-output-action:	get_USCOREhbfp http://jinanwater.cn/get_hbfpResponse
int __ns1__get_USCOREhbfp(
    struct _ns1__get_USCOREhbfp*        ns1__get_USCOREhbfp,	///< Input parameter
    struct _ns1__get_USCOREhbfpResponse* ns1__get_USCOREhbfpResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREyyzd                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREyyzd" of service binding "yl_USCOREydSoap"

/**

Operation details:
yyzdjffs

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_yyzd"

  - Addressing input action: "http://jinanwater.cn/get_yyzd"

  - Addressing output action: "http://jinanwater.cn/get_yyzdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREyyzd(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREyyzd*        ns1__get_USCOREyyzd,
    // output parameters:
    struct _ns1__get_USCOREyyzdResponse* ns1__get_USCOREyyzdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREyyzd(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREyyzd*        ns1__get_USCOREyyzd,
    // output parameters:
    struct _ns1__get_USCOREyyzdResponse* ns1__get_USCOREyyzdResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREyyzd SOAP
//gsoap ns1  service method-style:	get_USCOREyyzd document
//gsoap ns1  service method-encoding:	get_USCOREyyzd literal
//gsoap ns1  service method-input-action:	get_USCOREyyzd http://jinanwater.cn/get_yyzd
//gsoap ns1  service method-output-action:	get_USCOREyyzd http://jinanwater.cn/get_yyzdResponse
int __ns1__get_USCOREyyzd(
    struct _ns1__get_USCOREyyzd*        ns1__get_USCOREyyzd,	///< Input parameter
    struct _ns1__get_USCOREyyzdResponse* ns1__get_USCOREyyzdResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbwsh_USCOREyue                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbwsh_USCOREyue" of service binding "yl_USCOREydSoap"

/**

Operation details:
()

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbwsh_yue"

  - Addressing input action: "http://jinanwater.cn/get_hbwsh_yue"

  - Addressing output action: "http://jinanwater.cn/get_hbwsh_yueResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbwsh_USCOREyue(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbwsh_USCOREyue* ns1__get_USCOREhbwsh_USCOREyue,
    // output parameters:
    struct _ns1__get_USCOREhbwsh_USCOREyueResponse* ns1__get_USCOREhbwsh_USCOREyueResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbwsh_USCOREyue(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbwsh_USCOREyue* ns1__get_USCOREhbwsh_USCOREyue,
    // output parameters:
    struct _ns1__get_USCOREhbwsh_USCOREyueResponse* ns1__get_USCOREhbwsh_USCOREyueResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbwsh_USCOREyue SOAP
//gsoap ns1  service method-style:	get_USCOREhbwsh_USCOREyue document
//gsoap ns1  service method-encoding:	get_USCOREhbwsh_USCOREyue literal
//gsoap ns1  service method-input-action:	get_USCOREhbwsh_USCOREyue http://jinanwater.cn/get_hbwsh_yue
//gsoap ns1  service method-output-action:	get_USCOREhbwsh_USCOREyue http://jinanwater.cn/get_hbwsh_yueResponse
int __ns1__get_USCOREhbwsh_USCOREyue(
    struct _ns1__get_USCOREhbwsh_USCOREyue* ns1__get_USCOREhbwsh_USCOREyue,	///< Input parameter
    struct _ns1__get_USCOREhbwsh_USCOREyueResponse* ns1__get_USCOREhbwsh_USCOREyueResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREyue                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREyue" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_yue"

  - Addressing input action: "http://jinanwater.cn/get_yue"

  - Addressing output action: "http://jinanwater.cn/get_yueResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREyue(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREyue*         ns1__get_USCOREyue,
    // output parameters:
    struct _ns1__get_USCOREyueResponse* ns1__get_USCOREyueResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREyue(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREyue*         ns1__get_USCOREyue,
    // output parameters:
    struct _ns1__get_USCOREyueResponse* ns1__get_USCOREyueResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREyue SOAP
//gsoap ns1  service method-style:	get_USCOREyue document
//gsoap ns1  service method-encoding:	get_USCOREyue literal
//gsoap ns1  service method-input-action:	get_USCOREyue http://jinanwater.cn/get_yue
//gsoap ns1  service method-output-action:	get_USCOREyue http://jinanwater.cn/get_yueResponse
int __ns1__get_USCOREyue(
    struct _ns1__get_USCOREyue*         ns1__get_USCOREyue,	///< Input parameter
    struct _ns1__get_USCOREyueResponse* ns1__get_USCOREyueResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hbwsh_USCOREyue_USCOREupdate                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hbwsh_USCOREyue_USCOREupdate" of service binding "yl_USCOREydSoap"

/**

Operation details:
()

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hbwsh_yue_update"

  - Addressing input action: "http://jinanwater.cn/hbwsh_yue_update"

  - Addressing output action: "http://jinanwater.cn/hbwsh_yue_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hbwsh_USCOREyue_USCOREupdate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hbwsh_USCOREyue_USCOREupdate* ns1__hbwsh_USCOREyue_USCOREupdate,
    // output parameters:
    struct _ns1__hbwsh_USCOREyue_USCOREupdateResponse* ns1__hbwsh_USCOREyue_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hbwsh_USCOREyue_USCOREupdate(
    struct soap *soap,
    // input parameters:
    struct _ns1__hbwsh_USCOREyue_USCOREupdate* ns1__hbwsh_USCOREyue_USCOREupdate,
    // output parameters:
    struct _ns1__hbwsh_USCOREyue_USCOREupdateResponse* ns1__hbwsh_USCOREyue_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hbwsh_USCOREyue_USCOREupdate SOAP
//gsoap ns1  service method-style:	hbwsh_USCOREyue_USCOREupdate document
//gsoap ns1  service method-encoding:	hbwsh_USCOREyue_USCOREupdate literal
//gsoap ns1  service method-input-action:	hbwsh_USCOREyue_USCOREupdate http://jinanwater.cn/hbwsh_yue_update
//gsoap ns1  service method-output-action:	hbwsh_USCOREyue_USCOREupdate http://jinanwater.cn/hbwsh_yue_updateResponse
int __ns1__hbwsh_USCOREyue_USCOREupdate(
    struct _ns1__hbwsh_USCOREyue_USCOREupdate* ns1__hbwsh_USCOREyue_USCOREupdate,	///< Input parameter
    struct _ns1__hbwsh_USCOREyue_USCOREupdateResponse* ns1__hbwsh_USCOREyue_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hbtsf_USCOREyue_USCOREupdate                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hbtsf_USCOREyue_USCOREupdate" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hbtsf_yue_update"

  - Addressing input action: "http://jinanwater.cn/hbtsf_yue_update"

  - Addressing output action: "http://jinanwater.cn/hbtsf_yue_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hbtsf_USCOREyue_USCOREupdate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hbtsf_USCOREyue_USCOREupdate* ns1__hbtsf_USCOREyue_USCOREupdate,
    // output parameters:
    struct _ns1__hbtsf_USCOREyue_USCOREupdateResponse* ns1__hbtsf_USCOREyue_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hbtsf_USCOREyue_USCOREupdate(
    struct soap *soap,
    // input parameters:
    struct _ns1__hbtsf_USCOREyue_USCOREupdate* ns1__hbtsf_USCOREyue_USCOREupdate,
    // output parameters:
    struct _ns1__hbtsf_USCOREyue_USCOREupdateResponse* ns1__hbtsf_USCOREyue_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hbtsf_USCOREyue_USCOREupdate SOAP
//gsoap ns1  service method-style:	hbtsf_USCOREyue_USCOREupdate document
//gsoap ns1  service method-encoding:	hbtsf_USCOREyue_USCOREupdate literal
//gsoap ns1  service method-input-action:	hbtsf_USCOREyue_USCOREupdate http://jinanwater.cn/hbtsf_yue_update
//gsoap ns1  service method-output-action:	hbtsf_USCOREyue_USCOREupdate http://jinanwater.cn/hbtsf_yue_updateResponse
int __ns1__hbtsf_USCOREyue_USCOREupdate(
    struct _ns1__hbtsf_USCOREyue_USCOREupdate* ns1__hbtsf_USCOREyue_USCOREupdate,	///< Input parameter
    struct _ns1__hbtsf_USCOREyue_USCOREupdateResponse* ns1__hbtsf_USCOREyue_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hb_USCOREfp_USCOREdy_USCOREend                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hb_USCOREfp_USCOREdy_USCOREend" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hb_fp_dy_end"

  - Addressing input action: "http://jinanwater.cn/hb_fp_dy_end"

  - Addressing output action: "http://jinanwater.cn/hb_fp_dy_endResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hb_USCOREfp_USCOREdy_USCOREend(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend* ns1__hb_USCOREfp_USCOREdy_USCOREend,
    // output parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREendResponse* ns1__hb_USCOREfp_USCOREdy_USCOREendResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hb_USCOREfp_USCOREdy_USCOREend(
    struct soap *soap,
    // input parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend* ns1__hb_USCOREfp_USCOREdy_USCOREend,
    // output parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREendResponse* ns1__hb_USCOREfp_USCOREdy_USCOREendResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hb_USCOREfp_USCOREdy_USCOREend SOAP
//gsoap ns1  service method-style:	hb_USCOREfp_USCOREdy_USCOREend document
//gsoap ns1  service method-encoding:	hb_USCOREfp_USCOREdy_USCOREend literal
//gsoap ns1  service method-input-action:	hb_USCOREfp_USCOREdy_USCOREend http://jinanwater.cn/hb_fp_dy_end
//gsoap ns1  service method-output-action:	hb_USCOREfp_USCOREdy_USCOREend http://jinanwater.cn/hb_fp_dy_endResponse
int __ns1__hb_USCOREfp_USCOREdy_USCOREend(
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend* ns1__hb_USCOREfp_USCOREdy_USCOREend,	///< Input parameter
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREendResponse* ns1__hb_USCOREfp_USCOREdy_USCOREendResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREwsh                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREwsh" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_wsh"

  - Addressing input action: "http://jinanwater.cn/get_wsh"

  - Addressing output action: "http://jinanwater.cn/get_wshResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREwsh(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREwsh*         ns1__get_USCOREwsh,
    // output parameters:
    struct _ns1__get_USCOREwshResponse* ns1__get_USCOREwshResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREwsh(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREwsh*         ns1__get_USCOREwsh,
    // output parameters:
    struct _ns1__get_USCOREwshResponse* ns1__get_USCOREwshResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREwsh SOAP
//gsoap ns1  service method-style:	get_USCOREwsh document
//gsoap ns1  service method-encoding:	get_USCOREwsh literal
//gsoap ns1  service method-input-action:	get_USCOREwsh http://jinanwater.cn/get_wsh
//gsoap ns1  service method-output-action:	get_USCOREwsh http://jinanwater.cn/get_wshResponse
int __ns1__get_USCOREwsh(
    struct _ns1__get_USCOREwsh*         ns1__get_USCOREwsh,	///< Input parameter
    struct _ns1__get_USCOREwshResponse* ns1__get_USCOREwshResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREzb_USCOREmx                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREzb_USCOREmx" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_zb_mx"

  - Addressing input action: "http://jinanwater.cn/get_zb_mx"

  - Addressing output action: "http://jinanwater.cn/get_zb_mxResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREzb_USCOREmx(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREzb_USCOREmx* ns1__get_USCOREzb_USCOREmx,
    // output parameters:
    struct _ns1__get_USCOREzb_USCOREmxResponse* ns1__get_USCOREzb_USCOREmxResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREzb_USCOREmx(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREzb_USCOREmx* ns1__get_USCOREzb_USCOREmx,
    // output parameters:
    struct _ns1__get_USCOREzb_USCOREmxResponse* ns1__get_USCOREzb_USCOREmxResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREzb_USCOREmx SOAP
//gsoap ns1  service method-style:	get_USCOREzb_USCOREmx document
//gsoap ns1  service method-encoding:	get_USCOREzb_USCOREmx literal
//gsoap ns1  service method-input-action:	get_USCOREzb_USCOREmx http://jinanwater.cn/get_zb_mx
//gsoap ns1  service method-output-action:	get_USCOREzb_USCOREmx http://jinanwater.cn/get_zb_mxResponse
int __ns1__get_USCOREzb_USCOREmx(
    struct _ns1__get_USCOREzb_USCOREmx* ns1__get_USCOREzb_USCOREmx,	///< Input parameter
    struct _ns1__get_USCOREzb_USCOREmxResponse* ns1__get_USCOREzb_USCOREmxResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__wsh_USCOREupdate                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__wsh_USCOREupdate" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/wsh_update"

  - Addressing input action: "http://jinanwater.cn/wsh_update"

  - Addressing output action: "http://jinanwater.cn/wsh_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__wsh_USCOREupdate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__wsh_USCOREupdate*      ns1__wsh_USCOREupdate,
    // output parameters:
    struct _ns1__wsh_USCOREupdateResponse* ns1__wsh_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__wsh_USCOREupdate(
    struct soap *soap,
    // input parameters:
    struct _ns1__wsh_USCOREupdate*      ns1__wsh_USCOREupdate,
    // output parameters:
    struct _ns1__wsh_USCOREupdateResponse* ns1__wsh_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	wsh_USCOREupdate SOAP
//gsoap ns1  service method-style:	wsh_USCOREupdate document
//gsoap ns1  service method-encoding:	wsh_USCOREupdate literal
//gsoap ns1  service method-input-action:	wsh_USCOREupdate http://jinanwater.cn/wsh_update
//gsoap ns1  service method-output-action:	wsh_USCOREupdate http://jinanwater.cn/wsh_updateResponse
int __ns1__wsh_USCOREupdate(
    struct _ns1__wsh_USCOREupdate*      ns1__wsh_USCOREupdate,	///< Input parameter
    struct _ns1__wsh_USCOREupdateResponse* ns1__wsh_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__tsf_USCOREupdate                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tsf_USCOREupdate" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/tsf_update"

  - Addressing input action: "http://jinanwater.cn/tsf_update"

  - Addressing output action: "http://jinanwater.cn/tsf_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tsf_USCOREupdate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__tsf_USCOREupdate*      ns1__tsf_USCOREupdate,
    // output parameters:
    struct _ns1__tsf_USCOREupdateResponse* ns1__tsf_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tsf_USCOREupdate(
    struct soap *soap,
    // input parameters:
    struct _ns1__tsf_USCOREupdate*      ns1__tsf_USCOREupdate,
    // output parameters:
    struct _ns1__tsf_USCOREupdateResponse* ns1__tsf_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	tsf_USCOREupdate SOAP
//gsoap ns1  service method-style:	tsf_USCOREupdate document
//gsoap ns1  service method-encoding:	tsf_USCOREupdate literal
//gsoap ns1  service method-input-action:	tsf_USCOREupdate http://jinanwater.cn/tsf_update
//gsoap ns1  service method-output-action:	tsf_USCOREupdate http://jinanwater.cn/tsf_updateResponse
int __ns1__tsf_USCOREupdate(
    struct _ns1__tsf_USCOREupdate*      ns1__tsf_USCOREupdate,	///< Input parameter
    struct _ns1__tsf_USCOREupdateResponse* ns1__tsf_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ZB_USCORETZ_USCOREDay                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ZB_USCORETZ_USCOREDay" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/ZB_TZ_Day"

  - Addressing input action: "http://jinanwater.cn/ZB_TZ_Day"

  - Addressing output action: "http://jinanwater.cn/ZB_TZ_DayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ZB_USCORETZ_USCOREDay(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__ZB_USCORETZ_USCOREDay* ns1__ZB_USCORETZ_USCOREDay,
    // output parameters:
    struct _ns1__ZB_USCORETZ_USCOREDayResponse* ns1__ZB_USCORETZ_USCOREDayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ZB_USCORETZ_USCOREDay(
    struct soap *soap,
    // input parameters:
    struct _ns1__ZB_USCORETZ_USCOREDay* ns1__ZB_USCORETZ_USCOREDay,
    // output parameters:
    struct _ns1__ZB_USCORETZ_USCOREDayResponse* ns1__ZB_USCORETZ_USCOREDayResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	ZB_USCORETZ_USCOREDay SOAP
//gsoap ns1  service method-style:	ZB_USCORETZ_USCOREDay document
//gsoap ns1  service method-encoding:	ZB_USCORETZ_USCOREDay literal
//gsoap ns1  service method-input-action:	ZB_USCORETZ_USCOREDay http://jinanwater.cn/ZB_TZ_Day
//gsoap ns1  service method-output-action:	ZB_USCORETZ_USCOREDay http://jinanwater.cn/ZB_TZ_DayResponse
int __ns1__ZB_USCORETZ_USCOREDay(
    struct _ns1__ZB_USCORETZ_USCOREDay* ns1__ZB_USCORETZ_USCOREDay,	///< Input parameter
    struct _ns1__ZB_USCORETZ_USCOREDayResponse* ns1__ZB_USCORETZ_USCOREDayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ZB_USCORETZ_USCOREMonth                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ZB_USCORETZ_USCOREMonth" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/ZB_TZ_Month"

  - Addressing input action: "http://jinanwater.cn/ZB_TZ_Month"

  - Addressing output action: "http://jinanwater.cn/ZB_TZ_MonthResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ZB_USCORETZ_USCOREMonth(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__ZB_USCORETZ_USCOREMonth* ns1__ZB_USCORETZ_USCOREMonth,
    // output parameters:
    struct _ns1__ZB_USCORETZ_USCOREMonthResponse* ns1__ZB_USCORETZ_USCOREMonthResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ZB_USCORETZ_USCOREMonth(
    struct soap *soap,
    // input parameters:
    struct _ns1__ZB_USCORETZ_USCOREMonth* ns1__ZB_USCORETZ_USCOREMonth,
    // output parameters:
    struct _ns1__ZB_USCORETZ_USCOREMonthResponse* ns1__ZB_USCORETZ_USCOREMonthResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	ZB_USCORETZ_USCOREMonth SOAP
//gsoap ns1  service method-style:	ZB_USCORETZ_USCOREMonth document
//gsoap ns1  service method-encoding:	ZB_USCORETZ_USCOREMonth literal
//gsoap ns1  service method-input-action:	ZB_USCORETZ_USCOREMonth http://jinanwater.cn/ZB_TZ_Month
//gsoap ns1  service method-output-action:	ZB_USCORETZ_USCOREMonth http://jinanwater.cn/ZB_TZ_MonthResponse
int __ns1__ZB_USCORETZ_USCOREMonth(
    struct _ns1__ZB_USCORETZ_USCOREMonth* ns1__ZB_USCORETZ_USCOREMonth,	///< Input parameter
    struct _ns1__ZB_USCORETZ_USCOREMonthResponse* ns1__ZB_USCORETZ_USCOREMonthResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREzbfp                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREzbfp" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_zbfp"

  - Addressing input action: "http://jinanwater.cn/get_zbfp"

  - Addressing output action: "http://jinanwater.cn/get_zbfpResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREzbfp(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREzbfp*        ns1__get_USCOREzbfp,
    // output parameters:
    struct _ns1__get_USCOREzbfpResponse* ns1__get_USCOREzbfpResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREzbfp(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREzbfp*        ns1__get_USCOREzbfp,
    // output parameters:
    struct _ns1__get_USCOREzbfpResponse* ns1__get_USCOREzbfpResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREzbfp SOAP
//gsoap ns1  service method-style:	get_USCOREzbfp document
//gsoap ns1  service method-encoding:	get_USCOREzbfp literal
//gsoap ns1  service method-input-action:	get_USCOREzbfp http://jinanwater.cn/get_zbfp
//gsoap ns1  service method-output-action:	get_USCOREzbfp http://jinanwater.cn/get_zbfpResponse
int __ns1__get_USCOREzbfp(
    struct _ns1__get_USCOREzbfp*        ns1__get_USCOREzbfp,	///< Input parameter
    struct _ns1__get_USCOREzbfpResponse* ns1__get_USCOREzbfpResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__fp_USCOREdy_USCOREend                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__fp_USCOREdy_USCOREend" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/fp_dy_end"

  - Addressing input action: "http://jinanwater.cn/fp_dy_end"

  - Addressing output action: "http://jinanwater.cn/fp_dy_endResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__fp_USCOREdy_USCOREend(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__fp_USCOREdy_USCOREend* ns1__fp_USCOREdy_USCOREend,
    // output parameters:
    struct _ns1__fp_USCOREdy_USCOREendResponse* ns1__fp_USCOREdy_USCOREendResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__fp_USCOREdy_USCOREend(
    struct soap *soap,
    // input parameters:
    struct _ns1__fp_USCOREdy_USCOREend* ns1__fp_USCOREdy_USCOREend,
    // output parameters:
    struct _ns1__fp_USCOREdy_USCOREendResponse* ns1__fp_USCOREdy_USCOREendResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	fp_USCOREdy_USCOREend SOAP
//gsoap ns1  service method-style:	fp_USCOREdy_USCOREend document
//gsoap ns1  service method-encoding:	fp_USCOREdy_USCOREend literal
//gsoap ns1  service method-input-action:	fp_USCOREdy_USCOREend http://jinanwater.cn/fp_dy_end
//gsoap ns1  service method-output-action:	fp_USCOREdy_USCOREend http://jinanwater.cn/fp_dy_endResponse
int __ns1__fp_USCOREdy_USCOREend(
    struct _ns1__fp_USCOREdy_USCOREend* ns1__fp_USCOREdy_USCOREend,	///< Input parameter
    struct _ns1__fp_USCOREdy_USCOREendResponse* ns1__fp_USCOREdy_USCOREendResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbgs1                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbgs1" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbgs1"

  - Addressing input action: "http://jinanwater.cn/get_hbgs1"

  - Addressing output action: "http://jinanwater.cn/get_hbgs1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbgs1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbgs1*       ns1__get_USCOREhbgs1,
    // output parameters:
    struct _ns1__get_USCOREhbgs1Response* ns1__get_USCOREhbgs1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbgs1(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbgs1*       ns1__get_USCOREhbgs1,
    // output parameters:
    struct _ns1__get_USCOREhbgs1Response* ns1__get_USCOREhbgs1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbgs1 SOAP
//gsoap ns1  service method-style:	get_USCOREhbgs1 document
//gsoap ns1  service method-encoding:	get_USCOREhbgs1 literal
//gsoap ns1  service method-input-action:	get_USCOREhbgs1 http://jinanwater.cn/get_hbgs1
//gsoap ns1  service method-output-action:	get_USCOREhbgs1 http://jinanwater.cn/get_hbgs1Response
int __ns1__get_USCOREhbgs1(
    struct _ns1__get_USCOREhbgs1*       ns1__get_USCOREhbgs1,	///< Input parameter
    struct _ns1__get_USCOREhbgs1Response* ns1__get_USCOREhbgs1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbwsh1                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbwsh1" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbwsh1"

  - Addressing input action: "http://jinanwater.cn/get_hbwsh1"

  - Addressing output action: "http://jinanwater.cn/get_hbwsh1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbwsh1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbwsh1*      ns1__get_USCOREhbwsh1,
    // output parameters:
    struct _ns1__get_USCOREhbwsh1Response* ns1__get_USCOREhbwsh1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbwsh1(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbwsh1*      ns1__get_USCOREhbwsh1,
    // output parameters:
    struct _ns1__get_USCOREhbwsh1Response* ns1__get_USCOREhbwsh1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbwsh1 SOAP
//gsoap ns1  service method-style:	get_USCOREhbwsh1 document
//gsoap ns1  service method-encoding:	get_USCOREhbwsh1 literal
//gsoap ns1  service method-input-action:	get_USCOREhbwsh1 http://jinanwater.cn/get_hbwsh1
//gsoap ns1  service method-output-action:	get_USCOREhbwsh1 http://jinanwater.cn/get_hbwsh1Response
int __ns1__get_USCOREhbwsh1(
    struct _ns1__get_USCOREhbwsh1*      ns1__get_USCOREhbwsh1,	///< Input parameter
    struct _ns1__get_USCOREhbwsh1Response* ns1__get_USCOREhbwsh1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREmx1                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREmx1" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_mx1"

  - Addressing input action: "http://jinanwater.cn/get_mx1"

  - Addressing output action: "http://jinanwater.cn/get_mx1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREmx1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREmx1*         ns1__get_USCOREmx1,
    // output parameters:
    struct _ns1__get_USCOREmx1Response* ns1__get_USCOREmx1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREmx1(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREmx1*         ns1__get_USCOREmx1,
    // output parameters:
    struct _ns1__get_USCOREmx1Response* ns1__get_USCOREmx1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREmx1 SOAP
//gsoap ns1  service method-style:	get_USCOREmx1 document
//gsoap ns1  service method-encoding:	get_USCOREmx1 literal
//gsoap ns1  service method-input-action:	get_USCOREmx1 http://jinanwater.cn/get_mx1
//gsoap ns1  service method-output-action:	get_USCOREmx1 http://jinanwater.cn/get_mx1Response
int __ns1__get_USCOREmx1(
    struct _ns1__get_USCOREmx1*         ns1__get_USCOREmx1,	///< Input parameter
    struct _ns1__get_USCOREmx1Response* ns1__get_USCOREmx1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hbwsh_USCOREupdate1                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hbwsh_USCOREupdate1" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hbwsh_update1"

  - Addressing input action: "http://jinanwater.cn/hbwsh_update1"

  - Addressing output action: "http://jinanwater.cn/hbwsh_update1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hbwsh_USCOREupdate1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hbwsh_USCOREupdate1*   ns1__hbwsh_USCOREupdate1,
    // output parameters:
    struct _ns1__hbwsh_USCOREupdate1Response* ns1__hbwsh_USCOREupdate1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hbwsh_USCOREupdate1(
    struct soap *soap,
    // input parameters:
    struct _ns1__hbwsh_USCOREupdate1*   ns1__hbwsh_USCOREupdate1,
    // output parameters:
    struct _ns1__hbwsh_USCOREupdate1Response* ns1__hbwsh_USCOREupdate1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hbwsh_USCOREupdate1 SOAP
//gsoap ns1  service method-style:	hbwsh_USCOREupdate1 document
//gsoap ns1  service method-encoding:	hbwsh_USCOREupdate1 literal
//gsoap ns1  service method-input-action:	hbwsh_USCOREupdate1 http://jinanwater.cn/hbwsh_update1
//gsoap ns1  service method-output-action:	hbwsh_USCOREupdate1 http://jinanwater.cn/hbwsh_update1Response
int __ns1__hbwsh_USCOREupdate1(
    struct _ns1__hbwsh_USCOREupdate1*   ns1__hbwsh_USCOREupdate1,	///< Input parameter
    struct _ns1__hbwsh_USCOREupdate1Response* ns1__hbwsh_USCOREupdate1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hbtsf_USCOREupdate1                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hbtsf_USCOREupdate1" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hbtsf_update1"

  - Addressing input action: "http://jinanwater.cn/hbtsf_update1"

  - Addressing output action: "http://jinanwater.cn/hbtsf_update1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hbtsf_USCOREupdate1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hbtsf_USCOREupdate1*   ns1__hbtsf_USCOREupdate1,
    // output parameters:
    struct _ns1__hbtsf_USCOREupdate1Response* ns1__hbtsf_USCOREupdate1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hbtsf_USCOREupdate1(
    struct soap *soap,
    // input parameters:
    struct _ns1__hbtsf_USCOREupdate1*   ns1__hbtsf_USCOREupdate1,
    // output parameters:
    struct _ns1__hbtsf_USCOREupdate1Response* ns1__hbtsf_USCOREupdate1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hbtsf_USCOREupdate1 SOAP
//gsoap ns1  service method-style:	hbtsf_USCOREupdate1 document
//gsoap ns1  service method-encoding:	hbtsf_USCOREupdate1 literal
//gsoap ns1  service method-input-action:	hbtsf_USCOREupdate1 http://jinanwater.cn/hbtsf_update1
//gsoap ns1  service method-output-action:	hbtsf_USCOREupdate1 http://jinanwater.cn/hbtsf_update1Response
int __ns1__hbtsf_USCOREupdate1(
    struct _ns1__hbtsf_USCOREupdate1*   ns1__hbtsf_USCOREupdate1,	///< Input parameter
    struct _ns1__hbtsf_USCOREupdate1Response* ns1__hbtsf_USCOREupdate1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbfp1                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbfp1" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbfp1"

  - Addressing input action: "http://jinanwater.cn/get_hbfp1"

  - Addressing output action: "http://jinanwater.cn/get_hbfp1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbfp1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbfp1*       ns1__get_USCOREhbfp1,
    // output parameters:
    struct _ns1__get_USCOREhbfp1Response* ns1__get_USCOREhbfp1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbfp1(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbfp1*       ns1__get_USCOREhbfp1,
    // output parameters:
    struct _ns1__get_USCOREhbfp1Response* ns1__get_USCOREhbfp1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbfp1 SOAP
//gsoap ns1  service method-style:	get_USCOREhbfp1 document
//gsoap ns1  service method-encoding:	get_USCOREhbfp1 literal
//gsoap ns1  service method-input-action:	get_USCOREhbfp1 http://jinanwater.cn/get_hbfp1
//gsoap ns1  service method-output-action:	get_USCOREhbfp1 http://jinanwater.cn/get_hbfp1Response
int __ns1__get_USCOREhbfp1(
    struct _ns1__get_USCOREhbfp1*       ns1__get_USCOREhbfp1,	///< Input parameter
    struct _ns1__get_USCOREhbfp1Response* ns1__get_USCOREhbfp1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREyyzd1                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREyyzd1" of service binding "yl_USCOREydSoap"

/**

Operation details:
yyzdjffs

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_yyzd1"

  - Addressing input action: "http://jinanwater.cn/get_yyzd1"

  - Addressing output action: "http://jinanwater.cn/get_yyzd1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREyyzd1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREyyzd1*       ns1__get_USCOREyyzd1,
    // output parameters:
    struct _ns1__get_USCOREyyzd1Response* ns1__get_USCOREyyzd1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREyyzd1(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREyyzd1*       ns1__get_USCOREyyzd1,
    // output parameters:
    struct _ns1__get_USCOREyyzd1Response* ns1__get_USCOREyyzd1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREyyzd1 SOAP
//gsoap ns1  service method-style:	get_USCOREyyzd1 document
//gsoap ns1  service method-encoding:	get_USCOREyyzd1 literal
//gsoap ns1  service method-input-action:	get_USCOREyyzd1 http://jinanwater.cn/get_yyzd1
//gsoap ns1  service method-output-action:	get_USCOREyyzd1 http://jinanwater.cn/get_yyzd1Response
int __ns1__get_USCOREyyzd1(
    struct _ns1__get_USCOREyyzd1*       ns1__get_USCOREyyzd1,	///< Input parameter
    struct _ns1__get_USCOREyyzd1Response* ns1__get_USCOREyyzd1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREyue1                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREyue1" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_yue1"

  - Addressing input action: "http://jinanwater.cn/get_yue1"

  - Addressing output action: "http://jinanwater.cn/get_yue1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREyue1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREyue1*        ns1__get_USCOREyue1,
    // output parameters:
    struct _ns1__get_USCOREyue1Response* ns1__get_USCOREyue1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREyue1(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREyue1*        ns1__get_USCOREyue1,
    // output parameters:
    struct _ns1__get_USCOREyue1Response* ns1__get_USCOREyue1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREyue1 SOAP
//gsoap ns1  service method-style:	get_USCOREyue1 document
//gsoap ns1  service method-encoding:	get_USCOREyue1 literal
//gsoap ns1  service method-input-action:	get_USCOREyue1 http://jinanwater.cn/get_yue1
//gsoap ns1  service method-output-action:	get_USCOREyue1 http://jinanwater.cn/get_yue1Response
int __ns1__get_USCOREyue1(
    struct _ns1__get_USCOREyue1*        ns1__get_USCOREyue1,	///< Input parameter
    struct _ns1__get_USCOREyue1Response* ns1__get_USCOREyue1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hb_USCOREfp_USCOREdy_USCOREend1                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hb_USCOREfp_USCOREdy_USCOREend1" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hb_fp_dy_end1"

  - Addressing input action: "http://jinanwater.cn/hb_fp_dy_end1"

  - Addressing output action: "http://jinanwater.cn/hb_fp_dy_end1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hb_USCOREfp_USCOREdy_USCOREend1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1* ns1__hb_USCOREfp_USCOREdy_USCOREend1,
    // output parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1Response* ns1__hb_USCOREfp_USCOREdy_USCOREend1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hb_USCOREfp_USCOREdy_USCOREend1(
    struct soap *soap,
    // input parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1* ns1__hb_USCOREfp_USCOREdy_USCOREend1,
    // output parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1Response* ns1__hb_USCOREfp_USCOREdy_USCOREend1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hb_USCOREfp_USCOREdy_USCOREend1 SOAP
//gsoap ns1  service method-style:	hb_USCOREfp_USCOREdy_USCOREend1 document
//gsoap ns1  service method-encoding:	hb_USCOREfp_USCOREdy_USCOREend1 literal
//gsoap ns1  service method-input-action:	hb_USCOREfp_USCOREdy_USCOREend1 http://jinanwater.cn/hb_fp_dy_end1
//gsoap ns1  service method-output-action:	hb_USCOREfp_USCOREdy_USCOREend1 http://jinanwater.cn/hb_fp_dy_end1Response
int __ns1__hb_USCOREfp_USCOREdy_USCOREend1(
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1* ns1__hb_USCOREfp_USCOREdy_USCOREend1,	///< Input parameter
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1Response* ns1__hb_USCOREfp_USCOREdy_USCOREend1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__TZ_USCOREDay1                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__TZ_USCOREDay1" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/TZ_Day1"

  - Addressing input action: "http://jinanwater.cn/TZ_Day1"

  - Addressing output action: "http://jinanwater.cn/TZ_Day1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__TZ_USCOREDay1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__TZ_USCOREDay1*         ns1__TZ_USCOREDay1,
    // output parameters:
    struct _ns1__TZ_USCOREDay1Response* ns1__TZ_USCOREDay1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__TZ_USCOREDay1(
    struct soap *soap,
    // input parameters:
    struct _ns1__TZ_USCOREDay1*         ns1__TZ_USCOREDay1,
    // output parameters:
    struct _ns1__TZ_USCOREDay1Response* ns1__TZ_USCOREDay1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	TZ_USCOREDay1 SOAP
//gsoap ns1  service method-style:	TZ_USCOREDay1 document
//gsoap ns1  service method-encoding:	TZ_USCOREDay1 literal
//gsoap ns1  service method-input-action:	TZ_USCOREDay1 http://jinanwater.cn/TZ_Day1
//gsoap ns1  service method-output-action:	TZ_USCOREDay1 http://jinanwater.cn/TZ_Day1Response
int __ns1__TZ_USCOREDay1(
    struct _ns1__TZ_USCOREDay1*         ns1__TZ_USCOREDay1,	///< Input parameter
    struct _ns1__TZ_USCOREDay1Response* ns1__TZ_USCOREDay1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__m_USCOREtz_USCOREupdate1                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__m_USCOREtz_USCOREupdate1" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/m_tz_update1"

  - Addressing input action: "http://jinanwater.cn/m_tz_update1"

  - Addressing output action: "http://jinanwater.cn/m_tz_update1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__m_USCOREtz_USCOREupdate1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__m_USCOREtz_USCOREupdate1* ns1__m_USCOREtz_USCOREupdate1,
    // output parameters:
    struct _ns1__m_USCOREtz_USCOREupdate1Response* ns1__m_USCOREtz_USCOREupdate1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__m_USCOREtz_USCOREupdate1(
    struct soap *soap,
    // input parameters:
    struct _ns1__m_USCOREtz_USCOREupdate1* ns1__m_USCOREtz_USCOREupdate1,
    // output parameters:
    struct _ns1__m_USCOREtz_USCOREupdate1Response* ns1__m_USCOREtz_USCOREupdate1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	m_USCOREtz_USCOREupdate1 SOAP
//gsoap ns1  service method-style:	m_USCOREtz_USCOREupdate1 document
//gsoap ns1  service method-encoding:	m_USCOREtz_USCOREupdate1 literal
//gsoap ns1  service method-input-action:	m_USCOREtz_USCOREupdate1 http://jinanwater.cn/m_tz_update1
//gsoap ns1  service method-output-action:	m_USCOREtz_USCOREupdate1 http://jinanwater.cn/m_tz_update1Response
int __ns1__m_USCOREtz_USCOREupdate1(
    struct _ns1__m_USCOREtz_USCOREupdate1* ns1__m_USCOREtz_USCOREupdate1,	///< Input parameter
    struct _ns1__m_USCOREtz_USCOREupdate1Response* ns1__m_USCOREtz_USCOREupdate1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetTime_                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetTime_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/GetTime"

  - Addressing input action: "http://jinanwater.cn/GetTime"

  - Addressing output action: "http://jinanwater.cn/GetTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetTime_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetTime*               ns1__GetTime,
    // output parameters:
    struct _ns1__GetTimeResponse*       ns1__GetTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetTime_(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetTime*               ns1__GetTime,
    // output parameters:
    struct _ns1__GetTimeResponse*       ns1__GetTimeResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetTime_ SOAP
//gsoap ns1  service method-style:	GetTime_ document
//gsoap ns1  service method-encoding:	GetTime_ literal
//gsoap ns1  service method-input-action:	GetTime_ http://jinanwater.cn/GetTime
//gsoap ns1  service method-output-action:	GetTime_ http://jinanwater.cn/GetTimeResponse
int __ns1__GetTime_(
    struct _ns1__GetTime*               ns1__GetTime,	///< Input parameter
    struct _ns1__GetTimeResponse*       ns1__GetTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDNS_                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDNS_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/GetDNS"

  - Addressing input action: "http://jinanwater.cn/GetDNS"

  - Addressing output action: "http://jinanwater.cn/GetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDNS_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetDNS*                ns1__GetDNS,
    // output parameters:
    struct _ns1__GetDNSResponse*        ns1__GetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDNS_(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetDNS*                ns1__GetDNS,
    // output parameters:
    struct _ns1__GetDNSResponse*        ns1__GetDNSResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetDNS_ SOAP
//gsoap ns1  service method-style:	GetDNS_ document
//gsoap ns1  service method-encoding:	GetDNS_ literal
//gsoap ns1  service method-input-action:	GetDNS_ http://jinanwater.cn/GetDNS
//gsoap ns1  service method-output-action:	GetDNS_ http://jinanwater.cn/GetDNSResponse
int __ns1__GetDNS_(
    struct _ns1__GetDNS*                ns1__GetDNS,	///< Input parameter
    struct _ns1__GetDNSResponse*        ns1__GetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetHostInfo_                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetHostInfo_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/GetHostInfo"

  - Addressing input action: "http://jinanwater.cn/GetHostInfo"

  - Addressing output action: "http://jinanwater.cn/GetHostInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetHostInfo_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__GetHostInfo*           ns1__GetHostInfo,
    // output parameters:
    struct _ns1__GetHostInfoResponse*   ns1__GetHostInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetHostInfo_(
    struct soap *soap,
    // input parameters:
    struct _ns1__GetHostInfo*           ns1__GetHostInfo,
    // output parameters:
    struct _ns1__GetHostInfoResponse*   ns1__GetHostInfoResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetHostInfo_ SOAP
//gsoap ns1  service method-style:	GetHostInfo_ document
//gsoap ns1  service method-encoding:	GetHostInfo_ literal
//gsoap ns1  service method-input-action:	GetHostInfo_ http://jinanwater.cn/GetHostInfo
//gsoap ns1  service method-output-action:	GetHostInfo_ http://jinanwater.cn/GetHostInfoResponse
int __ns1__GetHostInfo_(
    struct _ns1__GetHostInfo*           ns1__GetHostInfo,	///< Input parameter
    struct _ns1__GetHostInfoResponse*   ns1__GetHostInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CheckSHA1_                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CheckSHA1_" of service binding "yl_USCOREydSoap"

/**

Operation details:
SHA1

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/CheckSHA1"

  - Addressing input action: "http://jinanwater.cn/CheckSHA1"

  - Addressing output action: "http://jinanwater.cn/CheckSHA1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CheckSHA1_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__CheckSHA1*             ns1__CheckSHA1,
    // output parameters:
    struct _ns1__CheckSHA1Response*     ns1__CheckSHA1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CheckSHA1_(
    struct soap *soap,
    // input parameters:
    struct _ns1__CheckSHA1*             ns1__CheckSHA1,
    // output parameters:
    struct _ns1__CheckSHA1Response*     ns1__CheckSHA1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	CheckSHA1_ SOAP
//gsoap ns1  service method-style:	CheckSHA1_ document
//gsoap ns1  service method-encoding:	CheckSHA1_ literal
//gsoap ns1  service method-input-action:	CheckSHA1_ http://jinanwater.cn/CheckSHA1
//gsoap ns1  service method-output-action:	CheckSHA1_ http://jinanwater.cn/CheckSHA1Response
int __ns1__CheckSHA1_(
    struct _ns1__CheckSHA1*             ns1__CheckSHA1,	///< Input parameter
    struct _ns1__CheckSHA1Response*     ns1__CheckSHA1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ToBASE64_                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ToBASE64_" of service binding "yl_USCOREydSoap"

/**

Operation details:
Base64

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/ToBASE64"

  - Addressing input action: "http://jinanwater.cn/ToBASE64"

  - Addressing output action: "http://jinanwater.cn/ToBASE64Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ToBASE64_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__ToBASE64*              ns1__ToBASE64,
    // output parameters:
    struct _ns1__ToBASE64Response*      ns1__ToBASE64Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ToBASE64_(
    struct soap *soap,
    // input parameters:
    struct _ns1__ToBASE64*              ns1__ToBASE64,
    // output parameters:
    struct _ns1__ToBASE64Response*      ns1__ToBASE64Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	ToBASE64_ SOAP
//gsoap ns1  service method-style:	ToBASE64_ document
//gsoap ns1  service method-encoding:	ToBASE64_ literal
//gsoap ns1  service method-input-action:	ToBASE64_ http://jinanwater.cn/ToBASE64
//gsoap ns1  service method-output-action:	ToBASE64_ http://jinanwater.cn/ToBASE64Response
int __ns1__ToBASE64_(
    struct _ns1__ToBASE64*              ns1__ToBASE64,	///< Input parameter
    struct _ns1__ToBASE64Response*      ns1__ToBASE64Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__FromBASE64_                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__FromBASE64_" of service binding "yl_USCOREydSoap"

/**

Operation details:
Base64

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/FromBASE64"

  - Addressing input action: "http://jinanwater.cn/FromBASE64"

  - Addressing output action: "http://jinanwater.cn/FromBASE64Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__FromBASE64_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__FromBASE64*            ns1__FromBASE64,
    // output parameters:
    struct _ns1__FromBASE64Response*    ns1__FromBASE64Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__FromBASE64_(
    struct soap *soap,
    // input parameters:
    struct _ns1__FromBASE64*            ns1__FromBASE64,
    // output parameters:
    struct _ns1__FromBASE64Response*    ns1__FromBASE64Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	FromBASE64_ SOAP
//gsoap ns1  service method-style:	FromBASE64_ document
//gsoap ns1  service method-encoding:	FromBASE64_ literal
//gsoap ns1  service method-input-action:	FromBASE64_ http://jinanwater.cn/FromBASE64
//gsoap ns1  service method-output-action:	FromBASE64_ http://jinanwater.cn/FromBASE64Response
int __ns1__FromBASE64_(
    struct _ns1__FromBASE64*            ns1__FromBASE64,	///< Input parameter
    struct _ns1__FromBASE64Response*    ns1__FromBASE64Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbgs_                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbgs_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbgs"

  - Addressing input action: "http://jinanwater.cn/get_hbgs"

  - Addressing output action: "http://jinanwater.cn/get_hbgsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbgs_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbgs*        ns1__get_USCOREhbgs,
    // output parameters:
    struct _ns1__get_USCOREhbgsResponse* ns1__get_USCOREhbgsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbgs_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbgs*        ns1__get_USCOREhbgs,
    // output parameters:
    struct _ns1__get_USCOREhbgsResponse* ns1__get_USCOREhbgsResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbgs_ SOAP
//gsoap ns1  service method-style:	get_USCOREhbgs_ document
//gsoap ns1  service method-encoding:	get_USCOREhbgs_ literal
//gsoap ns1  service method-input-action:	get_USCOREhbgs_ http://jinanwater.cn/get_hbgs
//gsoap ns1  service method-output-action:	get_USCOREhbgs_ http://jinanwater.cn/get_hbgsResponse
int __ns1__get_USCOREhbgs_(
    struct _ns1__get_USCOREhbgs*        ns1__get_USCOREhbgs,	///< Input parameter
    struct _ns1__get_USCOREhbgsResponse* ns1__get_USCOREhbgsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbwsh_                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbwsh_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbwsh"

  - Addressing input action: "http://jinanwater.cn/get_hbwsh"

  - Addressing output action: "http://jinanwater.cn/get_hbwshResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbwsh_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbwsh*       ns1__get_USCOREhbwsh,
    // output parameters:
    struct _ns1__get_USCOREhbwshResponse* ns1__get_USCOREhbwshResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbwsh_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbwsh*       ns1__get_USCOREhbwsh,
    // output parameters:
    struct _ns1__get_USCOREhbwshResponse* ns1__get_USCOREhbwshResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbwsh_ SOAP
//gsoap ns1  service method-style:	get_USCOREhbwsh_ document
//gsoap ns1  service method-encoding:	get_USCOREhbwsh_ literal
//gsoap ns1  service method-input-action:	get_USCOREhbwsh_ http://jinanwater.cn/get_hbwsh
//gsoap ns1  service method-output-action:	get_USCOREhbwsh_ http://jinanwater.cn/get_hbwshResponse
int __ns1__get_USCOREhbwsh_(
    struct _ns1__get_USCOREhbwsh*       ns1__get_USCOREhbwsh,	///< Input parameter
    struct _ns1__get_USCOREhbwshResponse* ns1__get_USCOREhbwshResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREmx_                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREmx_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_mx"

  - Addressing input action: "http://jinanwater.cn/get_mx"

  - Addressing output action: "http://jinanwater.cn/get_mxResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREmx_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREmx*          ns1__get_USCOREmx,
    // output parameters:
    struct _ns1__get_USCOREmxResponse*  ns1__get_USCOREmxResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREmx_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREmx*          ns1__get_USCOREmx,
    // output parameters:
    struct _ns1__get_USCOREmxResponse*  ns1__get_USCOREmxResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREmx_ SOAP
//gsoap ns1  service method-style:	get_USCOREmx_ document
//gsoap ns1  service method-encoding:	get_USCOREmx_ literal
//gsoap ns1  service method-input-action:	get_USCOREmx_ http://jinanwater.cn/get_mx
//gsoap ns1  service method-output-action:	get_USCOREmx_ http://jinanwater.cn/get_mxResponse
int __ns1__get_USCOREmx_(
    struct _ns1__get_USCOREmx*          ns1__get_USCOREmx,	///< Input parameter
    struct _ns1__get_USCOREmxResponse*  ns1__get_USCOREmxResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hbwsh_USCOREupdate_                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hbwsh_USCOREupdate_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hbwsh_update"

  - Addressing input action: "http://jinanwater.cn/hbwsh_update"

  - Addressing output action: "http://jinanwater.cn/hbwsh_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hbwsh_USCOREupdate_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hbwsh_USCOREupdate*    ns1__hbwsh_USCOREupdate,
    // output parameters:
    struct _ns1__hbwsh_USCOREupdateResponse* ns1__hbwsh_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hbwsh_USCOREupdate_(
    struct soap *soap,
    // input parameters:
    struct _ns1__hbwsh_USCOREupdate*    ns1__hbwsh_USCOREupdate,
    // output parameters:
    struct _ns1__hbwsh_USCOREupdateResponse* ns1__hbwsh_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hbwsh_USCOREupdate_ SOAP
//gsoap ns1  service method-style:	hbwsh_USCOREupdate_ document
//gsoap ns1  service method-encoding:	hbwsh_USCOREupdate_ literal
//gsoap ns1  service method-input-action:	hbwsh_USCOREupdate_ http://jinanwater.cn/hbwsh_update
//gsoap ns1  service method-output-action:	hbwsh_USCOREupdate_ http://jinanwater.cn/hbwsh_updateResponse
int __ns1__hbwsh_USCOREupdate_(
    struct _ns1__hbwsh_USCOREupdate*    ns1__hbwsh_USCOREupdate,	///< Input parameter
    struct _ns1__hbwsh_USCOREupdateResponse* ns1__hbwsh_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hbtsf_USCOREupdate_                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hbtsf_USCOREupdate_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hbtsf_update"

  - Addressing input action: "http://jinanwater.cn/hbtsf_update"

  - Addressing output action: "http://jinanwater.cn/hbtsf_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hbtsf_USCOREupdate_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hbtsf_USCOREupdate*    ns1__hbtsf_USCOREupdate,
    // output parameters:
    struct _ns1__hbtsf_USCOREupdateResponse* ns1__hbtsf_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hbtsf_USCOREupdate_(
    struct soap *soap,
    // input parameters:
    struct _ns1__hbtsf_USCOREupdate*    ns1__hbtsf_USCOREupdate,
    // output parameters:
    struct _ns1__hbtsf_USCOREupdateResponse* ns1__hbtsf_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hbtsf_USCOREupdate_ SOAP
//gsoap ns1  service method-style:	hbtsf_USCOREupdate_ document
//gsoap ns1  service method-encoding:	hbtsf_USCOREupdate_ literal
//gsoap ns1  service method-input-action:	hbtsf_USCOREupdate_ http://jinanwater.cn/hbtsf_update
//gsoap ns1  service method-output-action:	hbtsf_USCOREupdate_ http://jinanwater.cn/hbtsf_updateResponse
int __ns1__hbtsf_USCOREupdate_(
    struct _ns1__hbtsf_USCOREupdate*    ns1__hbtsf_USCOREupdate,	///< Input parameter
    struct _ns1__hbtsf_USCOREupdateResponse* ns1__hbtsf_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__TZ_USCOREDay_                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__TZ_USCOREDay_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/TZ_Day"

  - Addressing input action: "http://jinanwater.cn/TZ_Day"

  - Addressing output action: "http://jinanwater.cn/TZ_DayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__TZ_USCOREDay_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__TZ_USCOREDay*          ns1__TZ_USCOREDay,
    // output parameters:
    struct _ns1__TZ_USCOREDayResponse*  ns1__TZ_USCOREDayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__TZ_USCOREDay_(
    struct soap *soap,
    // input parameters:
    struct _ns1__TZ_USCOREDay*          ns1__TZ_USCOREDay,
    // output parameters:
    struct _ns1__TZ_USCOREDayResponse*  ns1__TZ_USCOREDayResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	TZ_USCOREDay_ SOAP
//gsoap ns1  service method-style:	TZ_USCOREDay_ document
//gsoap ns1  service method-encoding:	TZ_USCOREDay_ literal
//gsoap ns1  service method-input-action:	TZ_USCOREDay_ http://jinanwater.cn/TZ_Day
//gsoap ns1  service method-output-action:	TZ_USCOREDay_ http://jinanwater.cn/TZ_DayResponse
int __ns1__TZ_USCOREDay_(
    struct _ns1__TZ_USCOREDay*          ns1__TZ_USCOREDay,	///< Input parameter
    struct _ns1__TZ_USCOREDayResponse*  ns1__TZ_USCOREDayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__TZ_USCOREMonth_                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__TZ_USCOREMonth_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/TZ_Month"

  - Addressing input action: "http://jinanwater.cn/TZ_Month"

  - Addressing output action: "http://jinanwater.cn/TZ_MonthResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__TZ_USCOREMonth_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__TZ_USCOREMonth*        ns1__TZ_USCOREMonth,
    // output parameters:
    struct _ns1__TZ_USCOREMonthResponse* ns1__TZ_USCOREMonthResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__TZ_USCOREMonth_(
    struct soap *soap,
    // input parameters:
    struct _ns1__TZ_USCOREMonth*        ns1__TZ_USCOREMonth,
    // output parameters:
    struct _ns1__TZ_USCOREMonthResponse* ns1__TZ_USCOREMonthResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	TZ_USCOREMonth_ SOAP
//gsoap ns1  service method-style:	TZ_USCOREMonth_ document
//gsoap ns1  service method-encoding:	TZ_USCOREMonth_ literal
//gsoap ns1  service method-input-action:	TZ_USCOREMonth_ http://jinanwater.cn/TZ_Month
//gsoap ns1  service method-output-action:	TZ_USCOREMonth_ http://jinanwater.cn/TZ_MonthResponse
int __ns1__TZ_USCOREMonth_(
    struct _ns1__TZ_USCOREMonth*        ns1__TZ_USCOREMonth,	///< Input parameter
    struct _ns1__TZ_USCOREMonthResponse* ns1__TZ_USCOREMonthResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__m_USCOREtz_USCOREupdate_                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__m_USCOREtz_USCOREupdate_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/m_tz_update"

  - Addressing input action: "http://jinanwater.cn/m_tz_update"

  - Addressing output action: "http://jinanwater.cn/m_tz_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__m_USCOREtz_USCOREupdate_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__m_USCOREtz_USCOREupdate* ns1__m_USCOREtz_USCOREupdate,
    // output parameters:
    struct _ns1__m_USCOREtz_USCOREupdateResponse* ns1__m_USCOREtz_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__m_USCOREtz_USCOREupdate_(
    struct soap *soap,
    // input parameters:
    struct _ns1__m_USCOREtz_USCOREupdate* ns1__m_USCOREtz_USCOREupdate,
    // output parameters:
    struct _ns1__m_USCOREtz_USCOREupdateResponse* ns1__m_USCOREtz_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	m_USCOREtz_USCOREupdate_ SOAP
//gsoap ns1  service method-style:	m_USCOREtz_USCOREupdate_ document
//gsoap ns1  service method-encoding:	m_USCOREtz_USCOREupdate_ literal
//gsoap ns1  service method-input-action:	m_USCOREtz_USCOREupdate_ http://jinanwater.cn/m_tz_update
//gsoap ns1  service method-output-action:	m_USCOREtz_USCOREupdate_ http://jinanwater.cn/m_tz_updateResponse
int __ns1__m_USCOREtz_USCOREupdate_(
    struct _ns1__m_USCOREtz_USCOREupdate* ns1__m_USCOREtz_USCOREupdate,	///< Input parameter
    struct _ns1__m_USCOREtz_USCOREupdateResponse* ns1__m_USCOREtz_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__m_USCOREzb_USCOREtz_USCOREupdate_                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__m_USCOREzb_USCOREtz_USCOREupdate_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/m_zb_tz_update"

  - Addressing input action: "http://jinanwater.cn/m_zb_tz_update"

  - Addressing output action: "http://jinanwater.cn/m_zb_tz_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__m_USCOREzb_USCOREtz_USCOREupdate_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__m_USCOREzb_USCOREtz_USCOREupdate* ns1__m_USCOREzb_USCOREtz_USCOREupdate,
    // output parameters:
    struct _ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse* ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__m_USCOREzb_USCOREtz_USCOREupdate_(
    struct soap *soap,
    // input parameters:
    struct _ns1__m_USCOREzb_USCOREtz_USCOREupdate* ns1__m_USCOREzb_USCOREtz_USCOREupdate,
    // output parameters:
    struct _ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse* ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	m_USCOREzb_USCOREtz_USCOREupdate_ SOAP
//gsoap ns1  service method-style:	m_USCOREzb_USCOREtz_USCOREupdate_ document
//gsoap ns1  service method-encoding:	m_USCOREzb_USCOREtz_USCOREupdate_ literal
//gsoap ns1  service method-input-action:	m_USCOREzb_USCOREtz_USCOREupdate_ http://jinanwater.cn/m_zb_tz_update
//gsoap ns1  service method-output-action:	m_USCOREzb_USCOREtz_USCOREupdate_ http://jinanwater.cn/m_zb_tz_updateResponse
int __ns1__m_USCOREzb_USCOREtz_USCOREupdate_(
    struct _ns1__m_USCOREzb_USCOREtz_USCOREupdate* ns1__m_USCOREzb_USCOREtz_USCOREupdate,	///< Input parameter
    struct _ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse* ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbfp_                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbfp_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbfp"

  - Addressing input action: "http://jinanwater.cn/get_hbfp"

  - Addressing output action: "http://jinanwater.cn/get_hbfpResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbfp_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbfp*        ns1__get_USCOREhbfp,
    // output parameters:
    struct _ns1__get_USCOREhbfpResponse* ns1__get_USCOREhbfpResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbfp_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbfp*        ns1__get_USCOREhbfp,
    // output parameters:
    struct _ns1__get_USCOREhbfpResponse* ns1__get_USCOREhbfpResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbfp_ SOAP
//gsoap ns1  service method-style:	get_USCOREhbfp_ document
//gsoap ns1  service method-encoding:	get_USCOREhbfp_ literal
//gsoap ns1  service method-input-action:	get_USCOREhbfp_ http://jinanwater.cn/get_hbfp
//gsoap ns1  service method-output-action:	get_USCOREhbfp_ http://jinanwater.cn/get_hbfpResponse
int __ns1__get_USCOREhbfp_(
    struct _ns1__get_USCOREhbfp*        ns1__get_USCOREhbfp,	///< Input parameter
    struct _ns1__get_USCOREhbfpResponse* ns1__get_USCOREhbfpResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREyyzd_                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREyyzd_" of service binding "yl_USCOREydSoap"

/**

Operation details:
yyzdjffs

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_yyzd"

  - Addressing input action: "http://jinanwater.cn/get_yyzd"

  - Addressing output action: "http://jinanwater.cn/get_yyzdResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREyyzd_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREyyzd*        ns1__get_USCOREyyzd,
    // output parameters:
    struct _ns1__get_USCOREyyzdResponse* ns1__get_USCOREyyzdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREyyzd_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREyyzd*        ns1__get_USCOREyyzd,
    // output parameters:
    struct _ns1__get_USCOREyyzdResponse* ns1__get_USCOREyyzdResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREyyzd_ SOAP
//gsoap ns1  service method-style:	get_USCOREyyzd_ document
//gsoap ns1  service method-encoding:	get_USCOREyyzd_ literal
//gsoap ns1  service method-input-action:	get_USCOREyyzd_ http://jinanwater.cn/get_yyzd
//gsoap ns1  service method-output-action:	get_USCOREyyzd_ http://jinanwater.cn/get_yyzdResponse
int __ns1__get_USCOREyyzd_(
    struct _ns1__get_USCOREyyzd*        ns1__get_USCOREyyzd,	///< Input parameter
    struct _ns1__get_USCOREyyzdResponse* ns1__get_USCOREyyzdResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbwsh_USCOREyue_                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbwsh_USCOREyue_" of service binding "yl_USCOREydSoap"

/**

Operation details:
()

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbwsh_yue"

  - Addressing input action: "http://jinanwater.cn/get_hbwsh_yue"

  - Addressing output action: "http://jinanwater.cn/get_hbwsh_yueResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbwsh_USCOREyue_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbwsh_USCOREyue* ns1__get_USCOREhbwsh_USCOREyue,
    // output parameters:
    struct _ns1__get_USCOREhbwsh_USCOREyueResponse* ns1__get_USCOREhbwsh_USCOREyueResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbwsh_USCOREyue_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbwsh_USCOREyue* ns1__get_USCOREhbwsh_USCOREyue,
    // output parameters:
    struct _ns1__get_USCOREhbwsh_USCOREyueResponse* ns1__get_USCOREhbwsh_USCOREyueResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbwsh_USCOREyue_ SOAP
//gsoap ns1  service method-style:	get_USCOREhbwsh_USCOREyue_ document
//gsoap ns1  service method-encoding:	get_USCOREhbwsh_USCOREyue_ literal
//gsoap ns1  service method-input-action:	get_USCOREhbwsh_USCOREyue_ http://jinanwater.cn/get_hbwsh_yue
//gsoap ns1  service method-output-action:	get_USCOREhbwsh_USCOREyue_ http://jinanwater.cn/get_hbwsh_yueResponse
int __ns1__get_USCOREhbwsh_USCOREyue_(
    struct _ns1__get_USCOREhbwsh_USCOREyue* ns1__get_USCOREhbwsh_USCOREyue,	///< Input parameter
    struct _ns1__get_USCOREhbwsh_USCOREyueResponse* ns1__get_USCOREhbwsh_USCOREyueResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREyue_                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREyue_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_yue"

  - Addressing input action: "http://jinanwater.cn/get_yue"

  - Addressing output action: "http://jinanwater.cn/get_yueResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREyue_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREyue*         ns1__get_USCOREyue,
    // output parameters:
    struct _ns1__get_USCOREyueResponse* ns1__get_USCOREyueResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREyue_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREyue*         ns1__get_USCOREyue,
    // output parameters:
    struct _ns1__get_USCOREyueResponse* ns1__get_USCOREyueResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREyue_ SOAP
//gsoap ns1  service method-style:	get_USCOREyue_ document
//gsoap ns1  service method-encoding:	get_USCOREyue_ literal
//gsoap ns1  service method-input-action:	get_USCOREyue_ http://jinanwater.cn/get_yue
//gsoap ns1  service method-output-action:	get_USCOREyue_ http://jinanwater.cn/get_yueResponse
int __ns1__get_USCOREyue_(
    struct _ns1__get_USCOREyue*         ns1__get_USCOREyue,	///< Input parameter
    struct _ns1__get_USCOREyueResponse* ns1__get_USCOREyueResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hbwsh_USCOREyue_USCOREupdate_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hbwsh_USCOREyue_USCOREupdate_" of service binding "yl_USCOREydSoap"

/**

Operation details:
()

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hbwsh_yue_update"

  - Addressing input action: "http://jinanwater.cn/hbwsh_yue_update"

  - Addressing output action: "http://jinanwater.cn/hbwsh_yue_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hbwsh_USCOREyue_USCOREupdate_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hbwsh_USCOREyue_USCOREupdate* ns1__hbwsh_USCOREyue_USCOREupdate,
    // output parameters:
    struct _ns1__hbwsh_USCOREyue_USCOREupdateResponse* ns1__hbwsh_USCOREyue_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hbwsh_USCOREyue_USCOREupdate_(
    struct soap *soap,
    // input parameters:
    struct _ns1__hbwsh_USCOREyue_USCOREupdate* ns1__hbwsh_USCOREyue_USCOREupdate,
    // output parameters:
    struct _ns1__hbwsh_USCOREyue_USCOREupdateResponse* ns1__hbwsh_USCOREyue_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hbwsh_USCOREyue_USCOREupdate_ SOAP
//gsoap ns1  service method-style:	hbwsh_USCOREyue_USCOREupdate_ document
//gsoap ns1  service method-encoding:	hbwsh_USCOREyue_USCOREupdate_ literal
//gsoap ns1  service method-input-action:	hbwsh_USCOREyue_USCOREupdate_ http://jinanwater.cn/hbwsh_yue_update
//gsoap ns1  service method-output-action:	hbwsh_USCOREyue_USCOREupdate_ http://jinanwater.cn/hbwsh_yue_updateResponse
int __ns1__hbwsh_USCOREyue_USCOREupdate_(
    struct _ns1__hbwsh_USCOREyue_USCOREupdate* ns1__hbwsh_USCOREyue_USCOREupdate,	///< Input parameter
    struct _ns1__hbwsh_USCOREyue_USCOREupdateResponse* ns1__hbwsh_USCOREyue_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hbtsf_USCOREyue_USCOREupdate_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hbtsf_USCOREyue_USCOREupdate_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hbtsf_yue_update"

  - Addressing input action: "http://jinanwater.cn/hbtsf_yue_update"

  - Addressing output action: "http://jinanwater.cn/hbtsf_yue_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hbtsf_USCOREyue_USCOREupdate_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hbtsf_USCOREyue_USCOREupdate* ns1__hbtsf_USCOREyue_USCOREupdate,
    // output parameters:
    struct _ns1__hbtsf_USCOREyue_USCOREupdateResponse* ns1__hbtsf_USCOREyue_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hbtsf_USCOREyue_USCOREupdate_(
    struct soap *soap,
    // input parameters:
    struct _ns1__hbtsf_USCOREyue_USCOREupdate* ns1__hbtsf_USCOREyue_USCOREupdate,
    // output parameters:
    struct _ns1__hbtsf_USCOREyue_USCOREupdateResponse* ns1__hbtsf_USCOREyue_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hbtsf_USCOREyue_USCOREupdate_ SOAP
//gsoap ns1  service method-style:	hbtsf_USCOREyue_USCOREupdate_ document
//gsoap ns1  service method-encoding:	hbtsf_USCOREyue_USCOREupdate_ literal
//gsoap ns1  service method-input-action:	hbtsf_USCOREyue_USCOREupdate_ http://jinanwater.cn/hbtsf_yue_update
//gsoap ns1  service method-output-action:	hbtsf_USCOREyue_USCOREupdate_ http://jinanwater.cn/hbtsf_yue_updateResponse
int __ns1__hbtsf_USCOREyue_USCOREupdate_(
    struct _ns1__hbtsf_USCOREyue_USCOREupdate* ns1__hbtsf_USCOREyue_USCOREupdate,	///< Input parameter
    struct _ns1__hbtsf_USCOREyue_USCOREupdateResponse* ns1__hbtsf_USCOREyue_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hb_USCOREfp_USCOREdy_USCOREend_                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hb_USCOREfp_USCOREdy_USCOREend_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hb_fp_dy_end"

  - Addressing input action: "http://jinanwater.cn/hb_fp_dy_end"

  - Addressing output action: "http://jinanwater.cn/hb_fp_dy_endResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hb_USCOREfp_USCOREdy_USCOREend_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend* ns1__hb_USCOREfp_USCOREdy_USCOREend,
    // output parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREendResponse* ns1__hb_USCOREfp_USCOREdy_USCOREendResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hb_USCOREfp_USCOREdy_USCOREend_(
    struct soap *soap,
    // input parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend* ns1__hb_USCOREfp_USCOREdy_USCOREend,
    // output parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREendResponse* ns1__hb_USCOREfp_USCOREdy_USCOREendResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hb_USCOREfp_USCOREdy_USCOREend_ SOAP
//gsoap ns1  service method-style:	hb_USCOREfp_USCOREdy_USCOREend_ document
//gsoap ns1  service method-encoding:	hb_USCOREfp_USCOREdy_USCOREend_ literal
//gsoap ns1  service method-input-action:	hb_USCOREfp_USCOREdy_USCOREend_ http://jinanwater.cn/hb_fp_dy_end
//gsoap ns1  service method-output-action:	hb_USCOREfp_USCOREdy_USCOREend_ http://jinanwater.cn/hb_fp_dy_endResponse
int __ns1__hb_USCOREfp_USCOREdy_USCOREend_(
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend* ns1__hb_USCOREfp_USCOREdy_USCOREend,	///< Input parameter
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREendResponse* ns1__hb_USCOREfp_USCOREdy_USCOREendResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREwsh_                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREwsh_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_wsh"

  - Addressing input action: "http://jinanwater.cn/get_wsh"

  - Addressing output action: "http://jinanwater.cn/get_wshResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREwsh_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREwsh*         ns1__get_USCOREwsh,
    // output parameters:
    struct _ns1__get_USCOREwshResponse* ns1__get_USCOREwshResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREwsh_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREwsh*         ns1__get_USCOREwsh,
    // output parameters:
    struct _ns1__get_USCOREwshResponse* ns1__get_USCOREwshResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREwsh_ SOAP
//gsoap ns1  service method-style:	get_USCOREwsh_ document
//gsoap ns1  service method-encoding:	get_USCOREwsh_ literal
//gsoap ns1  service method-input-action:	get_USCOREwsh_ http://jinanwater.cn/get_wsh
//gsoap ns1  service method-output-action:	get_USCOREwsh_ http://jinanwater.cn/get_wshResponse
int __ns1__get_USCOREwsh_(
    struct _ns1__get_USCOREwsh*         ns1__get_USCOREwsh,	///< Input parameter
    struct _ns1__get_USCOREwshResponse* ns1__get_USCOREwshResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREzb_USCOREmx_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREzb_USCOREmx_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_zb_mx"

  - Addressing input action: "http://jinanwater.cn/get_zb_mx"

  - Addressing output action: "http://jinanwater.cn/get_zb_mxResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREzb_USCOREmx_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREzb_USCOREmx* ns1__get_USCOREzb_USCOREmx,
    // output parameters:
    struct _ns1__get_USCOREzb_USCOREmxResponse* ns1__get_USCOREzb_USCOREmxResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREzb_USCOREmx_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREzb_USCOREmx* ns1__get_USCOREzb_USCOREmx,
    // output parameters:
    struct _ns1__get_USCOREzb_USCOREmxResponse* ns1__get_USCOREzb_USCOREmxResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREzb_USCOREmx_ SOAP
//gsoap ns1  service method-style:	get_USCOREzb_USCOREmx_ document
//gsoap ns1  service method-encoding:	get_USCOREzb_USCOREmx_ literal
//gsoap ns1  service method-input-action:	get_USCOREzb_USCOREmx_ http://jinanwater.cn/get_zb_mx
//gsoap ns1  service method-output-action:	get_USCOREzb_USCOREmx_ http://jinanwater.cn/get_zb_mxResponse
int __ns1__get_USCOREzb_USCOREmx_(
    struct _ns1__get_USCOREzb_USCOREmx* ns1__get_USCOREzb_USCOREmx,	///< Input parameter
    struct _ns1__get_USCOREzb_USCOREmxResponse* ns1__get_USCOREzb_USCOREmxResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__wsh_USCOREupdate_                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__wsh_USCOREupdate_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/wsh_update"

  - Addressing input action: "http://jinanwater.cn/wsh_update"

  - Addressing output action: "http://jinanwater.cn/wsh_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__wsh_USCOREupdate_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__wsh_USCOREupdate*      ns1__wsh_USCOREupdate,
    // output parameters:
    struct _ns1__wsh_USCOREupdateResponse* ns1__wsh_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__wsh_USCOREupdate_(
    struct soap *soap,
    // input parameters:
    struct _ns1__wsh_USCOREupdate*      ns1__wsh_USCOREupdate,
    // output parameters:
    struct _ns1__wsh_USCOREupdateResponse* ns1__wsh_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	wsh_USCOREupdate_ SOAP
//gsoap ns1  service method-style:	wsh_USCOREupdate_ document
//gsoap ns1  service method-encoding:	wsh_USCOREupdate_ literal
//gsoap ns1  service method-input-action:	wsh_USCOREupdate_ http://jinanwater.cn/wsh_update
//gsoap ns1  service method-output-action:	wsh_USCOREupdate_ http://jinanwater.cn/wsh_updateResponse
int __ns1__wsh_USCOREupdate_(
    struct _ns1__wsh_USCOREupdate*      ns1__wsh_USCOREupdate,	///< Input parameter
    struct _ns1__wsh_USCOREupdateResponse* ns1__wsh_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__tsf_USCOREupdate_                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tsf_USCOREupdate_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/tsf_update"

  - Addressing input action: "http://jinanwater.cn/tsf_update"

  - Addressing output action: "http://jinanwater.cn/tsf_updateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tsf_USCOREupdate_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__tsf_USCOREupdate*      ns1__tsf_USCOREupdate,
    // output parameters:
    struct _ns1__tsf_USCOREupdateResponse* ns1__tsf_USCOREupdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tsf_USCOREupdate_(
    struct soap *soap,
    // input parameters:
    struct _ns1__tsf_USCOREupdate*      ns1__tsf_USCOREupdate,
    // output parameters:
    struct _ns1__tsf_USCOREupdateResponse* ns1__tsf_USCOREupdateResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	tsf_USCOREupdate_ SOAP
//gsoap ns1  service method-style:	tsf_USCOREupdate_ document
//gsoap ns1  service method-encoding:	tsf_USCOREupdate_ literal
//gsoap ns1  service method-input-action:	tsf_USCOREupdate_ http://jinanwater.cn/tsf_update
//gsoap ns1  service method-output-action:	tsf_USCOREupdate_ http://jinanwater.cn/tsf_updateResponse
int __ns1__tsf_USCOREupdate_(
    struct _ns1__tsf_USCOREupdate*      ns1__tsf_USCOREupdate,	///< Input parameter
    struct _ns1__tsf_USCOREupdateResponse* ns1__tsf_USCOREupdateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ZB_USCORETZ_USCOREDay_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ZB_USCORETZ_USCOREDay_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/ZB_TZ_Day"

  - Addressing input action: "http://jinanwater.cn/ZB_TZ_Day"

  - Addressing output action: "http://jinanwater.cn/ZB_TZ_DayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ZB_USCORETZ_USCOREDay_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__ZB_USCORETZ_USCOREDay* ns1__ZB_USCORETZ_USCOREDay,
    // output parameters:
    struct _ns1__ZB_USCORETZ_USCOREDayResponse* ns1__ZB_USCORETZ_USCOREDayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ZB_USCORETZ_USCOREDay_(
    struct soap *soap,
    // input parameters:
    struct _ns1__ZB_USCORETZ_USCOREDay* ns1__ZB_USCORETZ_USCOREDay,
    // output parameters:
    struct _ns1__ZB_USCORETZ_USCOREDayResponse* ns1__ZB_USCORETZ_USCOREDayResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	ZB_USCORETZ_USCOREDay_ SOAP
//gsoap ns1  service method-style:	ZB_USCORETZ_USCOREDay_ document
//gsoap ns1  service method-encoding:	ZB_USCORETZ_USCOREDay_ literal
//gsoap ns1  service method-input-action:	ZB_USCORETZ_USCOREDay_ http://jinanwater.cn/ZB_TZ_Day
//gsoap ns1  service method-output-action:	ZB_USCORETZ_USCOREDay_ http://jinanwater.cn/ZB_TZ_DayResponse
int __ns1__ZB_USCORETZ_USCOREDay_(
    struct _ns1__ZB_USCORETZ_USCOREDay* ns1__ZB_USCORETZ_USCOREDay,	///< Input parameter
    struct _ns1__ZB_USCORETZ_USCOREDayResponse* ns1__ZB_USCORETZ_USCOREDayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ZB_USCORETZ_USCOREMonth_                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ZB_USCORETZ_USCOREMonth_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/ZB_TZ_Month"

  - Addressing input action: "http://jinanwater.cn/ZB_TZ_Month"

  - Addressing output action: "http://jinanwater.cn/ZB_TZ_MonthResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ZB_USCORETZ_USCOREMonth_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__ZB_USCORETZ_USCOREMonth* ns1__ZB_USCORETZ_USCOREMonth,
    // output parameters:
    struct _ns1__ZB_USCORETZ_USCOREMonthResponse* ns1__ZB_USCORETZ_USCOREMonthResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ZB_USCORETZ_USCOREMonth_(
    struct soap *soap,
    // input parameters:
    struct _ns1__ZB_USCORETZ_USCOREMonth* ns1__ZB_USCORETZ_USCOREMonth,
    // output parameters:
    struct _ns1__ZB_USCORETZ_USCOREMonthResponse* ns1__ZB_USCORETZ_USCOREMonthResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	ZB_USCORETZ_USCOREMonth_ SOAP
//gsoap ns1  service method-style:	ZB_USCORETZ_USCOREMonth_ document
//gsoap ns1  service method-encoding:	ZB_USCORETZ_USCOREMonth_ literal
//gsoap ns1  service method-input-action:	ZB_USCORETZ_USCOREMonth_ http://jinanwater.cn/ZB_TZ_Month
//gsoap ns1  service method-output-action:	ZB_USCORETZ_USCOREMonth_ http://jinanwater.cn/ZB_TZ_MonthResponse
int __ns1__ZB_USCORETZ_USCOREMonth_(
    struct _ns1__ZB_USCORETZ_USCOREMonth* ns1__ZB_USCORETZ_USCOREMonth,	///< Input parameter
    struct _ns1__ZB_USCORETZ_USCOREMonthResponse* ns1__ZB_USCORETZ_USCOREMonthResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREzbfp_                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREzbfp_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_zbfp"

  - Addressing input action: "http://jinanwater.cn/get_zbfp"

  - Addressing output action: "http://jinanwater.cn/get_zbfpResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREzbfp_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREzbfp*        ns1__get_USCOREzbfp,
    // output parameters:
    struct _ns1__get_USCOREzbfpResponse* ns1__get_USCOREzbfpResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREzbfp_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREzbfp*        ns1__get_USCOREzbfp,
    // output parameters:
    struct _ns1__get_USCOREzbfpResponse* ns1__get_USCOREzbfpResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREzbfp_ SOAP
//gsoap ns1  service method-style:	get_USCOREzbfp_ document
//gsoap ns1  service method-encoding:	get_USCOREzbfp_ literal
//gsoap ns1  service method-input-action:	get_USCOREzbfp_ http://jinanwater.cn/get_zbfp
//gsoap ns1  service method-output-action:	get_USCOREzbfp_ http://jinanwater.cn/get_zbfpResponse
int __ns1__get_USCOREzbfp_(
    struct _ns1__get_USCOREzbfp*        ns1__get_USCOREzbfp,	///< Input parameter
    struct _ns1__get_USCOREzbfpResponse* ns1__get_USCOREzbfpResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__fp_USCOREdy_USCOREend_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__fp_USCOREdy_USCOREend_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/fp_dy_end"

  - Addressing input action: "http://jinanwater.cn/fp_dy_end"

  - Addressing output action: "http://jinanwater.cn/fp_dy_endResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__fp_USCOREdy_USCOREend_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__fp_USCOREdy_USCOREend* ns1__fp_USCOREdy_USCOREend,
    // output parameters:
    struct _ns1__fp_USCOREdy_USCOREendResponse* ns1__fp_USCOREdy_USCOREendResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__fp_USCOREdy_USCOREend_(
    struct soap *soap,
    // input parameters:
    struct _ns1__fp_USCOREdy_USCOREend* ns1__fp_USCOREdy_USCOREend,
    // output parameters:
    struct _ns1__fp_USCOREdy_USCOREendResponse* ns1__fp_USCOREdy_USCOREendResponse
  );
@endcode

*/

//gsoap ns1  service method-protocol:	fp_USCOREdy_USCOREend_ SOAP
//gsoap ns1  service method-style:	fp_USCOREdy_USCOREend_ document
//gsoap ns1  service method-encoding:	fp_USCOREdy_USCOREend_ literal
//gsoap ns1  service method-input-action:	fp_USCOREdy_USCOREend_ http://jinanwater.cn/fp_dy_end
//gsoap ns1  service method-output-action:	fp_USCOREdy_USCOREend_ http://jinanwater.cn/fp_dy_endResponse
int __ns1__fp_USCOREdy_USCOREend_(
    struct _ns1__fp_USCOREdy_USCOREend* ns1__fp_USCOREdy_USCOREend,	///< Input parameter
    struct _ns1__fp_USCOREdy_USCOREendResponse* ns1__fp_USCOREdy_USCOREendResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbgs1_                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbgs1_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbgs1"

  - Addressing input action: "http://jinanwater.cn/get_hbgs1"

  - Addressing output action: "http://jinanwater.cn/get_hbgs1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbgs1_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbgs1*       ns1__get_USCOREhbgs1,
    // output parameters:
    struct _ns1__get_USCOREhbgs1Response* ns1__get_USCOREhbgs1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbgs1_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbgs1*       ns1__get_USCOREhbgs1,
    // output parameters:
    struct _ns1__get_USCOREhbgs1Response* ns1__get_USCOREhbgs1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbgs1_ SOAP
//gsoap ns1  service method-style:	get_USCOREhbgs1_ document
//gsoap ns1  service method-encoding:	get_USCOREhbgs1_ literal
//gsoap ns1  service method-input-action:	get_USCOREhbgs1_ http://jinanwater.cn/get_hbgs1
//gsoap ns1  service method-output-action:	get_USCOREhbgs1_ http://jinanwater.cn/get_hbgs1Response
int __ns1__get_USCOREhbgs1_(
    struct _ns1__get_USCOREhbgs1*       ns1__get_USCOREhbgs1,	///< Input parameter
    struct _ns1__get_USCOREhbgs1Response* ns1__get_USCOREhbgs1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbwsh1_                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbwsh1_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbwsh1"

  - Addressing input action: "http://jinanwater.cn/get_hbwsh1"

  - Addressing output action: "http://jinanwater.cn/get_hbwsh1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbwsh1_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbwsh1*      ns1__get_USCOREhbwsh1,
    // output parameters:
    struct _ns1__get_USCOREhbwsh1Response* ns1__get_USCOREhbwsh1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbwsh1_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbwsh1*      ns1__get_USCOREhbwsh1,
    // output parameters:
    struct _ns1__get_USCOREhbwsh1Response* ns1__get_USCOREhbwsh1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbwsh1_ SOAP
//gsoap ns1  service method-style:	get_USCOREhbwsh1_ document
//gsoap ns1  service method-encoding:	get_USCOREhbwsh1_ literal
//gsoap ns1  service method-input-action:	get_USCOREhbwsh1_ http://jinanwater.cn/get_hbwsh1
//gsoap ns1  service method-output-action:	get_USCOREhbwsh1_ http://jinanwater.cn/get_hbwsh1Response
int __ns1__get_USCOREhbwsh1_(
    struct _ns1__get_USCOREhbwsh1*      ns1__get_USCOREhbwsh1,	///< Input parameter
    struct _ns1__get_USCOREhbwsh1Response* ns1__get_USCOREhbwsh1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREmx1_                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREmx1_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_mx1"

  - Addressing input action: "http://jinanwater.cn/get_mx1"

  - Addressing output action: "http://jinanwater.cn/get_mx1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREmx1_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREmx1*         ns1__get_USCOREmx1,
    // output parameters:
    struct _ns1__get_USCOREmx1Response* ns1__get_USCOREmx1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREmx1_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREmx1*         ns1__get_USCOREmx1,
    // output parameters:
    struct _ns1__get_USCOREmx1Response* ns1__get_USCOREmx1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREmx1_ SOAP
//gsoap ns1  service method-style:	get_USCOREmx1_ document
//gsoap ns1  service method-encoding:	get_USCOREmx1_ literal
//gsoap ns1  service method-input-action:	get_USCOREmx1_ http://jinanwater.cn/get_mx1
//gsoap ns1  service method-output-action:	get_USCOREmx1_ http://jinanwater.cn/get_mx1Response
int __ns1__get_USCOREmx1_(
    struct _ns1__get_USCOREmx1*         ns1__get_USCOREmx1,	///< Input parameter
    struct _ns1__get_USCOREmx1Response* ns1__get_USCOREmx1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hbwsh_USCOREupdate1_                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hbwsh_USCOREupdate1_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hbwsh_update1"

  - Addressing input action: "http://jinanwater.cn/hbwsh_update1"

  - Addressing output action: "http://jinanwater.cn/hbwsh_update1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hbwsh_USCOREupdate1_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hbwsh_USCOREupdate1*   ns1__hbwsh_USCOREupdate1,
    // output parameters:
    struct _ns1__hbwsh_USCOREupdate1Response* ns1__hbwsh_USCOREupdate1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hbwsh_USCOREupdate1_(
    struct soap *soap,
    // input parameters:
    struct _ns1__hbwsh_USCOREupdate1*   ns1__hbwsh_USCOREupdate1,
    // output parameters:
    struct _ns1__hbwsh_USCOREupdate1Response* ns1__hbwsh_USCOREupdate1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hbwsh_USCOREupdate1_ SOAP
//gsoap ns1  service method-style:	hbwsh_USCOREupdate1_ document
//gsoap ns1  service method-encoding:	hbwsh_USCOREupdate1_ literal
//gsoap ns1  service method-input-action:	hbwsh_USCOREupdate1_ http://jinanwater.cn/hbwsh_update1
//gsoap ns1  service method-output-action:	hbwsh_USCOREupdate1_ http://jinanwater.cn/hbwsh_update1Response
int __ns1__hbwsh_USCOREupdate1_(
    struct _ns1__hbwsh_USCOREupdate1*   ns1__hbwsh_USCOREupdate1,	///< Input parameter
    struct _ns1__hbwsh_USCOREupdate1Response* ns1__hbwsh_USCOREupdate1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hbtsf_USCOREupdate1_                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hbtsf_USCOREupdate1_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hbtsf_update1"

  - Addressing input action: "http://jinanwater.cn/hbtsf_update1"

  - Addressing output action: "http://jinanwater.cn/hbtsf_update1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hbtsf_USCOREupdate1_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hbtsf_USCOREupdate1*   ns1__hbtsf_USCOREupdate1,
    // output parameters:
    struct _ns1__hbtsf_USCOREupdate1Response* ns1__hbtsf_USCOREupdate1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hbtsf_USCOREupdate1_(
    struct soap *soap,
    // input parameters:
    struct _ns1__hbtsf_USCOREupdate1*   ns1__hbtsf_USCOREupdate1,
    // output parameters:
    struct _ns1__hbtsf_USCOREupdate1Response* ns1__hbtsf_USCOREupdate1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hbtsf_USCOREupdate1_ SOAP
//gsoap ns1  service method-style:	hbtsf_USCOREupdate1_ document
//gsoap ns1  service method-encoding:	hbtsf_USCOREupdate1_ literal
//gsoap ns1  service method-input-action:	hbtsf_USCOREupdate1_ http://jinanwater.cn/hbtsf_update1
//gsoap ns1  service method-output-action:	hbtsf_USCOREupdate1_ http://jinanwater.cn/hbtsf_update1Response
int __ns1__hbtsf_USCOREupdate1_(
    struct _ns1__hbtsf_USCOREupdate1*   ns1__hbtsf_USCOREupdate1,	///< Input parameter
    struct _ns1__hbtsf_USCOREupdate1Response* ns1__hbtsf_USCOREupdate1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREhbfp1_                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREhbfp1_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_hbfp1"

  - Addressing input action: "http://jinanwater.cn/get_hbfp1"

  - Addressing output action: "http://jinanwater.cn/get_hbfp1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREhbfp1_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREhbfp1*       ns1__get_USCOREhbfp1,
    // output parameters:
    struct _ns1__get_USCOREhbfp1Response* ns1__get_USCOREhbfp1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREhbfp1_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREhbfp1*       ns1__get_USCOREhbfp1,
    // output parameters:
    struct _ns1__get_USCOREhbfp1Response* ns1__get_USCOREhbfp1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREhbfp1_ SOAP
//gsoap ns1  service method-style:	get_USCOREhbfp1_ document
//gsoap ns1  service method-encoding:	get_USCOREhbfp1_ literal
//gsoap ns1  service method-input-action:	get_USCOREhbfp1_ http://jinanwater.cn/get_hbfp1
//gsoap ns1  service method-output-action:	get_USCOREhbfp1_ http://jinanwater.cn/get_hbfp1Response
int __ns1__get_USCOREhbfp1_(
    struct _ns1__get_USCOREhbfp1*       ns1__get_USCOREhbfp1,	///< Input parameter
    struct _ns1__get_USCOREhbfp1Response* ns1__get_USCOREhbfp1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREyyzd1_                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREyyzd1_" of service binding "yl_USCOREydSoap"

/**

Operation details:
yyzdjffs

  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_yyzd1"

  - Addressing input action: "http://jinanwater.cn/get_yyzd1"

  - Addressing output action: "http://jinanwater.cn/get_yyzd1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREyyzd1_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREyyzd1*       ns1__get_USCOREyyzd1,
    // output parameters:
    struct _ns1__get_USCOREyyzd1Response* ns1__get_USCOREyyzd1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREyyzd1_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREyyzd1*       ns1__get_USCOREyyzd1,
    // output parameters:
    struct _ns1__get_USCOREyyzd1Response* ns1__get_USCOREyyzd1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREyyzd1_ SOAP
//gsoap ns1  service method-style:	get_USCOREyyzd1_ document
//gsoap ns1  service method-encoding:	get_USCOREyyzd1_ literal
//gsoap ns1  service method-input-action:	get_USCOREyyzd1_ http://jinanwater.cn/get_yyzd1
//gsoap ns1  service method-output-action:	get_USCOREyyzd1_ http://jinanwater.cn/get_yyzd1Response
int __ns1__get_USCOREyyzd1_(
    struct _ns1__get_USCOREyyzd1*       ns1__get_USCOREyyzd1,	///< Input parameter
    struct _ns1__get_USCOREyyzd1Response* ns1__get_USCOREyyzd1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__get_USCOREyue1_                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__get_USCOREyue1_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/get_yue1"

  - Addressing input action: "http://jinanwater.cn/get_yue1"

  - Addressing output action: "http://jinanwater.cn/get_yue1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__get_USCOREyue1_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__get_USCOREyue1*        ns1__get_USCOREyue1,
    // output parameters:
    struct _ns1__get_USCOREyue1Response* ns1__get_USCOREyue1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__get_USCOREyue1_(
    struct soap *soap,
    // input parameters:
    struct _ns1__get_USCOREyue1*        ns1__get_USCOREyue1,
    // output parameters:
    struct _ns1__get_USCOREyue1Response* ns1__get_USCOREyue1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	get_USCOREyue1_ SOAP
//gsoap ns1  service method-style:	get_USCOREyue1_ document
//gsoap ns1  service method-encoding:	get_USCOREyue1_ literal
//gsoap ns1  service method-input-action:	get_USCOREyue1_ http://jinanwater.cn/get_yue1
//gsoap ns1  service method-output-action:	get_USCOREyue1_ http://jinanwater.cn/get_yue1Response
int __ns1__get_USCOREyue1_(
    struct _ns1__get_USCOREyue1*        ns1__get_USCOREyue1,	///< Input parameter
    struct _ns1__get_USCOREyue1Response* ns1__get_USCOREyue1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hb_USCOREfp_USCOREdy_USCOREend1_                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__hb_USCOREfp_USCOREdy_USCOREend1_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/hb_fp_dy_end1"

  - Addressing input action: "http://jinanwater.cn/hb_fp_dy_end1"

  - Addressing output action: "http://jinanwater.cn/hb_fp_dy_end1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hb_USCOREfp_USCOREdy_USCOREend1_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1* ns1__hb_USCOREfp_USCOREdy_USCOREend1,
    // output parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1Response* ns1__hb_USCOREfp_USCOREdy_USCOREend1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hb_USCOREfp_USCOREdy_USCOREend1_(
    struct soap *soap,
    // input parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1* ns1__hb_USCOREfp_USCOREdy_USCOREend1,
    // output parameters:
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1Response* ns1__hb_USCOREfp_USCOREdy_USCOREend1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	hb_USCOREfp_USCOREdy_USCOREend1_ SOAP
//gsoap ns1  service method-style:	hb_USCOREfp_USCOREdy_USCOREend1_ document
//gsoap ns1  service method-encoding:	hb_USCOREfp_USCOREdy_USCOREend1_ literal
//gsoap ns1  service method-input-action:	hb_USCOREfp_USCOREdy_USCOREend1_ http://jinanwater.cn/hb_fp_dy_end1
//gsoap ns1  service method-output-action:	hb_USCOREfp_USCOREdy_USCOREend1_ http://jinanwater.cn/hb_fp_dy_end1Response
int __ns1__hb_USCOREfp_USCOREdy_USCOREend1_(
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1* ns1__hb_USCOREfp_USCOREdy_USCOREend1,	///< Input parameter
    struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1Response* ns1__hb_USCOREfp_USCOREdy_USCOREend1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__TZ_USCOREDay1_                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__TZ_USCOREDay1_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/TZ_Day1"

  - Addressing input action: "http://jinanwater.cn/TZ_Day1"

  - Addressing output action: "http://jinanwater.cn/TZ_Day1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__TZ_USCOREDay1_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__TZ_USCOREDay1*         ns1__TZ_USCOREDay1,
    // output parameters:
    struct _ns1__TZ_USCOREDay1Response* ns1__TZ_USCOREDay1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__TZ_USCOREDay1_(
    struct soap *soap,
    // input parameters:
    struct _ns1__TZ_USCOREDay1*         ns1__TZ_USCOREDay1,
    // output parameters:
    struct _ns1__TZ_USCOREDay1Response* ns1__TZ_USCOREDay1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	TZ_USCOREDay1_ SOAP
//gsoap ns1  service method-style:	TZ_USCOREDay1_ document
//gsoap ns1  service method-encoding:	TZ_USCOREDay1_ literal
//gsoap ns1  service method-input-action:	TZ_USCOREDay1_ http://jinanwater.cn/TZ_Day1
//gsoap ns1  service method-output-action:	TZ_USCOREDay1_ http://jinanwater.cn/TZ_Day1Response
int __ns1__TZ_USCOREDay1_(
    struct _ns1__TZ_USCOREDay1*         ns1__TZ_USCOREDay1,	///< Input parameter
    struct _ns1__TZ_USCOREDay1Response* ns1__TZ_USCOREDay1Response	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__m_USCOREtz_USCOREupdate1_                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__m_USCOREtz_USCOREupdate1_" of service binding "yl_USCOREydSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://jinanwater.cn/m_tz_update1"

  - Addressing input action: "http://jinanwater.cn/m_tz_update1"

  - Addressing output action: "http://jinanwater.cn/m_tz_update1Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__m_USCOREtz_USCOREupdate1_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _ns1__m_USCOREtz_USCOREupdate1* ns1__m_USCOREtz_USCOREupdate1,
    // output parameters:
    struct _ns1__m_USCOREtz_USCOREupdate1Response* ns1__m_USCOREtz_USCOREupdate1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__m_USCOREtz_USCOREupdate1_(
    struct soap *soap,
    // input parameters:
    struct _ns1__m_USCOREtz_USCOREupdate1* ns1__m_USCOREtz_USCOREupdate1,
    // output parameters:
    struct _ns1__m_USCOREtz_USCOREupdate1Response* ns1__m_USCOREtz_USCOREupdate1Response
  );
@endcode

*/

//gsoap ns1  service method-protocol:	m_USCOREtz_USCOREupdate1_ SOAP
//gsoap ns1  service method-style:	m_USCOREtz_USCOREupdate1_ document
//gsoap ns1  service method-encoding:	m_USCOREtz_USCOREupdate1_ literal
//gsoap ns1  service method-input-action:	m_USCOREtz_USCOREupdate1_ http://jinanwater.cn/m_tz_update1
//gsoap ns1  service method-output-action:	m_USCOREtz_USCOREupdate1_ http://jinanwater.cn/m_tz_update1Response
int __ns1__m_USCOREtz_USCOREupdate1_(
    struct _ns1__m_USCOREtz_USCOREupdate1* ns1__m_USCOREtz_USCOREupdate1,	///< Input parameter
    struct _ns1__m_USCOREtz_USCOREupdate1Response* ns1__m_USCOREtz_USCOREupdate1Response	///< Output parameter
);

/**

@page yl_USCOREydSoap Binding "yl_USCOREydSoap"

@section yl_USCOREydSoap_policy_enablers Policy Enablers of Binding  "yl_USCOREydSoap"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns1 Top-level root elements of schema "http://jinanwater.cn/"

  - <ns1:GetTime> @ref _ns1__GetTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetTime(struct soap*, struct _ns1__GetTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetTime(struct soap*, struct _ns1__GetTime*);
    @endcode

  - <ns1:GetTimeResponse> @ref _ns1__GetTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetTimeResponse(struct soap*, struct _ns1__GetTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetTimeResponse(struct soap*, struct _ns1__GetTimeResponse*);
    @endcode

  - <ns1:GetDNS> @ref _ns1__GetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetDNS(struct soap*, struct _ns1__GetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetDNS(struct soap*, struct _ns1__GetDNS*);
    @endcode

  - <ns1:GetDNSResponse> @ref _ns1__GetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetDNSResponse(struct soap*, struct _ns1__GetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetDNSResponse(struct soap*, struct _ns1__GetDNSResponse*);
    @endcode

  - <ns1:GetHostInfo> @ref _ns1__GetHostInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetHostInfo(struct soap*, struct _ns1__GetHostInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetHostInfo(struct soap*, struct _ns1__GetHostInfo*);
    @endcode

  - <ns1:GetHostInfoResponse> @ref _ns1__GetHostInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetHostInfoResponse(struct soap*, struct _ns1__GetHostInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetHostInfoResponse(struct soap*, struct _ns1__GetHostInfoResponse*);
    @endcode

  - <ns1:CheckSHA1> @ref _ns1__CheckSHA1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CheckSHA1(struct soap*, struct _ns1__CheckSHA1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CheckSHA1(struct soap*, struct _ns1__CheckSHA1*);
    @endcode

  - <ns1:CheckSHA1Response> @ref _ns1__CheckSHA1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CheckSHA1Response(struct soap*, struct _ns1__CheckSHA1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CheckSHA1Response(struct soap*, struct _ns1__CheckSHA1Response*);
    @endcode

  - <ns1:ToBASE64> @ref _ns1__ToBASE64
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ToBASE64(struct soap*, struct _ns1__ToBASE64*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ToBASE64(struct soap*, struct _ns1__ToBASE64*);
    @endcode

  - <ns1:ToBASE64Response> @ref _ns1__ToBASE64Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ToBASE64Response(struct soap*, struct _ns1__ToBASE64Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ToBASE64Response(struct soap*, struct _ns1__ToBASE64Response*);
    @endcode

  - <ns1:FromBASE64> @ref _ns1__FromBASE64
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__FromBASE64(struct soap*, struct _ns1__FromBASE64*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__FromBASE64(struct soap*, struct _ns1__FromBASE64*);
    @endcode

  - <ns1:FromBASE64Response> @ref _ns1__FromBASE64Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__FromBASE64Response(struct soap*, struct _ns1__FromBASE64Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__FromBASE64Response(struct soap*, struct _ns1__FromBASE64Response*);
    @endcode

  - <ns1:get_hbgs> @ref _ns1__get_USCOREhbgs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbgs(struct soap*, struct _ns1__get_USCOREhbgs*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbgs(struct soap*, struct _ns1__get_USCOREhbgs*);
    @endcode

  - <ns1:get_hbgsResponse> @ref _ns1__get_USCOREhbgsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbgsResponse(struct soap*, struct _ns1__get_USCOREhbgsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbgsResponse(struct soap*, struct _ns1__get_USCOREhbgsResponse*);
    @endcode

  - <ns1:get_hbwsh> @ref _ns1__get_USCOREhbwsh
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbwsh(struct soap*, struct _ns1__get_USCOREhbwsh*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbwsh(struct soap*, struct _ns1__get_USCOREhbwsh*);
    @endcode

  - <ns1:get_hbwshResponse> @ref _ns1__get_USCOREhbwshResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbwshResponse(struct soap*, struct _ns1__get_USCOREhbwshResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbwshResponse(struct soap*, struct _ns1__get_USCOREhbwshResponse*);
    @endcode

  - <ns1:get_mx> @ref _ns1__get_USCOREmx
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREmx(struct soap*, struct _ns1__get_USCOREmx*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREmx(struct soap*, struct _ns1__get_USCOREmx*);
    @endcode

  - <ns1:get_mxResponse> @ref _ns1__get_USCOREmxResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREmxResponse(struct soap*, struct _ns1__get_USCOREmxResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREmxResponse(struct soap*, struct _ns1__get_USCOREmxResponse*);
    @endcode

  - <ns1:hbwsh_update> @ref _ns1__hbwsh_USCOREupdate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hbwsh_USCOREupdate(struct soap*, struct _ns1__hbwsh_USCOREupdate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hbwsh_USCOREupdate(struct soap*, struct _ns1__hbwsh_USCOREupdate*);
    @endcode

  - <ns1:hbwsh_updateResponse> @ref _ns1__hbwsh_USCOREupdateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hbwsh_USCOREupdateResponse(struct soap*, struct _ns1__hbwsh_USCOREupdateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hbwsh_USCOREupdateResponse(struct soap*, struct _ns1__hbwsh_USCOREupdateResponse*);
    @endcode

  - <ns1:hbtsf_update> @ref _ns1__hbtsf_USCOREupdate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hbtsf_USCOREupdate(struct soap*, struct _ns1__hbtsf_USCOREupdate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hbtsf_USCOREupdate(struct soap*, struct _ns1__hbtsf_USCOREupdate*);
    @endcode

  - <ns1:hbtsf_updateResponse> @ref _ns1__hbtsf_USCOREupdateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hbtsf_USCOREupdateResponse(struct soap*, struct _ns1__hbtsf_USCOREupdateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hbtsf_USCOREupdateResponse(struct soap*, struct _ns1__hbtsf_USCOREupdateResponse*);
    @endcode

  - <ns1:TZ_Day> @ref _ns1__TZ_USCOREDay
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__TZ_USCOREDay(struct soap*, struct _ns1__TZ_USCOREDay*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__TZ_USCOREDay(struct soap*, struct _ns1__TZ_USCOREDay*);
    @endcode

  - <ns1:TZ_DayResponse> @ref _ns1__TZ_USCOREDayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__TZ_USCOREDayResponse(struct soap*, struct _ns1__TZ_USCOREDayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__TZ_USCOREDayResponse(struct soap*, struct _ns1__TZ_USCOREDayResponse*);
    @endcode

  - <ns1:TZ_Month> @ref _ns1__TZ_USCOREMonth
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__TZ_USCOREMonth(struct soap*, struct _ns1__TZ_USCOREMonth*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__TZ_USCOREMonth(struct soap*, struct _ns1__TZ_USCOREMonth*);
    @endcode

  - <ns1:TZ_MonthResponse> @ref _ns1__TZ_USCOREMonthResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__TZ_USCOREMonthResponse(struct soap*, struct _ns1__TZ_USCOREMonthResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__TZ_USCOREMonthResponse(struct soap*, struct _ns1__TZ_USCOREMonthResponse*);
    @endcode

  - <ns1:m_tz_update> @ref _ns1__m_USCOREtz_USCOREupdate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__m_USCOREtz_USCOREupdate(struct soap*, struct _ns1__m_USCOREtz_USCOREupdate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__m_USCOREtz_USCOREupdate(struct soap*, struct _ns1__m_USCOREtz_USCOREupdate*);
    @endcode

  - <ns1:m_tz_updateResponse> @ref _ns1__m_USCOREtz_USCOREupdateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__m_USCOREtz_USCOREupdateResponse(struct soap*, struct _ns1__m_USCOREtz_USCOREupdateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__m_USCOREtz_USCOREupdateResponse(struct soap*, struct _ns1__m_USCOREtz_USCOREupdateResponse*);
    @endcode

  - <ns1:m_zb_tz_update> @ref _ns1__m_USCOREzb_USCOREtz_USCOREupdate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__m_USCOREzb_USCOREtz_USCOREupdate(struct soap*, struct _ns1__m_USCOREzb_USCOREtz_USCOREupdate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__m_USCOREzb_USCOREtz_USCOREupdate(struct soap*, struct _ns1__m_USCOREzb_USCOREtz_USCOREupdate*);
    @endcode

  - <ns1:m_zb_tz_updateResponse> @ref _ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse(struct soap*, struct _ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse(struct soap*, struct _ns1__m_USCOREzb_USCOREtz_USCOREupdateResponse*);
    @endcode

  - <ns1:get_hbfp> @ref _ns1__get_USCOREhbfp
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbfp(struct soap*, struct _ns1__get_USCOREhbfp*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbfp(struct soap*, struct _ns1__get_USCOREhbfp*);
    @endcode

  - <ns1:get_hbfpResponse> @ref _ns1__get_USCOREhbfpResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbfpResponse(struct soap*, struct _ns1__get_USCOREhbfpResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbfpResponse(struct soap*, struct _ns1__get_USCOREhbfpResponse*);
    @endcode

  - <ns1:get_yyzd> @ref _ns1__get_USCOREyyzd
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREyyzd(struct soap*, struct _ns1__get_USCOREyyzd*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREyyzd(struct soap*, struct _ns1__get_USCOREyyzd*);
    @endcode

  - <ns1:get_yyzdResponse> @ref _ns1__get_USCOREyyzdResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREyyzdResponse(struct soap*, struct _ns1__get_USCOREyyzdResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREyyzdResponse(struct soap*, struct _ns1__get_USCOREyyzdResponse*);
    @endcode

  - <ns1:get_hbwsh_yue> @ref _ns1__get_USCOREhbwsh_USCOREyue
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbwsh_USCOREyue(struct soap*, struct _ns1__get_USCOREhbwsh_USCOREyue*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbwsh_USCOREyue(struct soap*, struct _ns1__get_USCOREhbwsh_USCOREyue*);
    @endcode

  - <ns1:get_hbwsh_yueResponse> @ref _ns1__get_USCOREhbwsh_USCOREyueResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbwsh_USCOREyueResponse(struct soap*, struct _ns1__get_USCOREhbwsh_USCOREyueResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbwsh_USCOREyueResponse(struct soap*, struct _ns1__get_USCOREhbwsh_USCOREyueResponse*);
    @endcode

  - <ns1:get_yue> @ref _ns1__get_USCOREyue
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREyue(struct soap*, struct _ns1__get_USCOREyue*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREyue(struct soap*, struct _ns1__get_USCOREyue*);
    @endcode

  - <ns1:get_yueResponse> @ref _ns1__get_USCOREyueResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREyueResponse(struct soap*, struct _ns1__get_USCOREyueResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREyueResponse(struct soap*, struct _ns1__get_USCOREyueResponse*);
    @endcode

  - <ns1:hbwsh_yue_update> @ref _ns1__hbwsh_USCOREyue_USCOREupdate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hbwsh_USCOREyue_USCOREupdate(struct soap*, struct _ns1__hbwsh_USCOREyue_USCOREupdate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hbwsh_USCOREyue_USCOREupdate(struct soap*, struct _ns1__hbwsh_USCOREyue_USCOREupdate*);
    @endcode

  - <ns1:hbwsh_yue_updateResponse> @ref _ns1__hbwsh_USCOREyue_USCOREupdateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hbwsh_USCOREyue_USCOREupdateResponse(struct soap*, struct _ns1__hbwsh_USCOREyue_USCOREupdateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hbwsh_USCOREyue_USCOREupdateResponse(struct soap*, struct _ns1__hbwsh_USCOREyue_USCOREupdateResponse*);
    @endcode

  - <ns1:hbtsf_yue_update> @ref _ns1__hbtsf_USCOREyue_USCOREupdate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hbtsf_USCOREyue_USCOREupdate(struct soap*, struct _ns1__hbtsf_USCOREyue_USCOREupdate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hbtsf_USCOREyue_USCOREupdate(struct soap*, struct _ns1__hbtsf_USCOREyue_USCOREupdate*);
    @endcode

  - <ns1:hbtsf_yue_updateResponse> @ref _ns1__hbtsf_USCOREyue_USCOREupdateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hbtsf_USCOREyue_USCOREupdateResponse(struct soap*, struct _ns1__hbtsf_USCOREyue_USCOREupdateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hbtsf_USCOREyue_USCOREupdateResponse(struct soap*, struct _ns1__hbtsf_USCOREyue_USCOREupdateResponse*);
    @endcode

  - <ns1:hb_fp_dy_end> @ref _ns1__hb_USCOREfp_USCOREdy_USCOREend
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hb_USCOREfp_USCOREdy_USCOREend(struct soap*, struct _ns1__hb_USCOREfp_USCOREdy_USCOREend*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hb_USCOREfp_USCOREdy_USCOREend(struct soap*, struct _ns1__hb_USCOREfp_USCOREdy_USCOREend*);
    @endcode

  - <ns1:hb_fp_dy_endResponse> @ref _ns1__hb_USCOREfp_USCOREdy_USCOREendResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hb_USCOREfp_USCOREdy_USCOREendResponse(struct soap*, struct _ns1__hb_USCOREfp_USCOREdy_USCOREendResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hb_USCOREfp_USCOREdy_USCOREendResponse(struct soap*, struct _ns1__hb_USCOREfp_USCOREdy_USCOREendResponse*);
    @endcode

  - <ns1:get_wsh> @ref _ns1__get_USCOREwsh
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREwsh(struct soap*, struct _ns1__get_USCOREwsh*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREwsh(struct soap*, struct _ns1__get_USCOREwsh*);
    @endcode

  - <ns1:get_wshResponse> @ref _ns1__get_USCOREwshResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREwshResponse(struct soap*, struct _ns1__get_USCOREwshResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREwshResponse(struct soap*, struct _ns1__get_USCOREwshResponse*);
    @endcode

  - <ns1:get_zb_mx> @ref _ns1__get_USCOREzb_USCOREmx
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREzb_USCOREmx(struct soap*, struct _ns1__get_USCOREzb_USCOREmx*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREzb_USCOREmx(struct soap*, struct _ns1__get_USCOREzb_USCOREmx*);
    @endcode

  - <ns1:get_zb_mxResponse> @ref _ns1__get_USCOREzb_USCOREmxResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREzb_USCOREmxResponse(struct soap*, struct _ns1__get_USCOREzb_USCOREmxResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREzb_USCOREmxResponse(struct soap*, struct _ns1__get_USCOREzb_USCOREmxResponse*);
    @endcode

  - <ns1:wsh_update> @ref _ns1__wsh_USCOREupdate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__wsh_USCOREupdate(struct soap*, struct _ns1__wsh_USCOREupdate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__wsh_USCOREupdate(struct soap*, struct _ns1__wsh_USCOREupdate*);
    @endcode

  - <ns1:wsh_updateResponse> @ref _ns1__wsh_USCOREupdateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__wsh_USCOREupdateResponse(struct soap*, struct _ns1__wsh_USCOREupdateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__wsh_USCOREupdateResponse(struct soap*, struct _ns1__wsh_USCOREupdateResponse*);
    @endcode

  - <ns1:tsf_update> @ref _ns1__tsf_USCOREupdate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__tsf_USCOREupdate(struct soap*, struct _ns1__tsf_USCOREupdate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__tsf_USCOREupdate(struct soap*, struct _ns1__tsf_USCOREupdate*);
    @endcode

  - <ns1:tsf_updateResponse> @ref _ns1__tsf_USCOREupdateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__tsf_USCOREupdateResponse(struct soap*, struct _ns1__tsf_USCOREupdateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__tsf_USCOREupdateResponse(struct soap*, struct _ns1__tsf_USCOREupdateResponse*);
    @endcode

  - <ns1:ZB_TZ_Day> @ref _ns1__ZB_USCORETZ_USCOREDay
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ZB_USCORETZ_USCOREDay(struct soap*, struct _ns1__ZB_USCORETZ_USCOREDay*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ZB_USCORETZ_USCOREDay(struct soap*, struct _ns1__ZB_USCORETZ_USCOREDay*);
    @endcode

  - <ns1:ZB_TZ_DayResponse> @ref _ns1__ZB_USCORETZ_USCOREDayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ZB_USCORETZ_USCOREDayResponse(struct soap*, struct _ns1__ZB_USCORETZ_USCOREDayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ZB_USCORETZ_USCOREDayResponse(struct soap*, struct _ns1__ZB_USCORETZ_USCOREDayResponse*);
    @endcode

  - <ns1:ZB_TZ_Month> @ref _ns1__ZB_USCORETZ_USCOREMonth
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ZB_USCORETZ_USCOREMonth(struct soap*, struct _ns1__ZB_USCORETZ_USCOREMonth*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ZB_USCORETZ_USCOREMonth(struct soap*, struct _ns1__ZB_USCORETZ_USCOREMonth*);
    @endcode

  - <ns1:ZB_TZ_MonthResponse> @ref _ns1__ZB_USCORETZ_USCOREMonthResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ZB_USCORETZ_USCOREMonthResponse(struct soap*, struct _ns1__ZB_USCORETZ_USCOREMonthResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ZB_USCORETZ_USCOREMonthResponse(struct soap*, struct _ns1__ZB_USCORETZ_USCOREMonthResponse*);
    @endcode

  - <ns1:get_zbfp> @ref _ns1__get_USCOREzbfp
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREzbfp(struct soap*, struct _ns1__get_USCOREzbfp*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREzbfp(struct soap*, struct _ns1__get_USCOREzbfp*);
    @endcode

  - <ns1:get_zbfpResponse> @ref _ns1__get_USCOREzbfpResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREzbfpResponse(struct soap*, struct _ns1__get_USCOREzbfpResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREzbfpResponse(struct soap*, struct _ns1__get_USCOREzbfpResponse*);
    @endcode

  - <ns1:fp_dy_end> @ref _ns1__fp_USCOREdy_USCOREend
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__fp_USCOREdy_USCOREend(struct soap*, struct _ns1__fp_USCOREdy_USCOREend*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__fp_USCOREdy_USCOREend(struct soap*, struct _ns1__fp_USCOREdy_USCOREend*);
    @endcode

  - <ns1:fp_dy_endResponse> @ref _ns1__fp_USCOREdy_USCOREendResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__fp_USCOREdy_USCOREendResponse(struct soap*, struct _ns1__fp_USCOREdy_USCOREendResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__fp_USCOREdy_USCOREendResponse(struct soap*, struct _ns1__fp_USCOREdy_USCOREendResponse*);
    @endcode

  - <ns1:get_hbgs1> @ref _ns1__get_USCOREhbgs1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbgs1(struct soap*, struct _ns1__get_USCOREhbgs1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbgs1(struct soap*, struct _ns1__get_USCOREhbgs1*);
    @endcode

  - <ns1:get_hbgs1Response> @ref _ns1__get_USCOREhbgs1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbgs1Response(struct soap*, struct _ns1__get_USCOREhbgs1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbgs1Response(struct soap*, struct _ns1__get_USCOREhbgs1Response*);
    @endcode

  - <ns1:get_hbwsh1> @ref _ns1__get_USCOREhbwsh1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbwsh1(struct soap*, struct _ns1__get_USCOREhbwsh1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbwsh1(struct soap*, struct _ns1__get_USCOREhbwsh1*);
    @endcode

  - <ns1:get_hbwsh1Response> @ref _ns1__get_USCOREhbwsh1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbwsh1Response(struct soap*, struct _ns1__get_USCOREhbwsh1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbwsh1Response(struct soap*, struct _ns1__get_USCOREhbwsh1Response*);
    @endcode

  - <ns1:get_mx1> @ref _ns1__get_USCOREmx1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREmx1(struct soap*, struct _ns1__get_USCOREmx1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREmx1(struct soap*, struct _ns1__get_USCOREmx1*);
    @endcode

  - <ns1:get_mx1Response> @ref _ns1__get_USCOREmx1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREmx1Response(struct soap*, struct _ns1__get_USCOREmx1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREmx1Response(struct soap*, struct _ns1__get_USCOREmx1Response*);
    @endcode

  - <ns1:hbwsh_update1> @ref _ns1__hbwsh_USCOREupdate1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hbwsh_USCOREupdate1(struct soap*, struct _ns1__hbwsh_USCOREupdate1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hbwsh_USCOREupdate1(struct soap*, struct _ns1__hbwsh_USCOREupdate1*);
    @endcode

  - <ns1:hbwsh_update1Response> @ref _ns1__hbwsh_USCOREupdate1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hbwsh_USCOREupdate1Response(struct soap*, struct _ns1__hbwsh_USCOREupdate1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hbwsh_USCOREupdate1Response(struct soap*, struct _ns1__hbwsh_USCOREupdate1Response*);
    @endcode

  - <ns1:hbtsf_update1> @ref _ns1__hbtsf_USCOREupdate1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hbtsf_USCOREupdate1(struct soap*, struct _ns1__hbtsf_USCOREupdate1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hbtsf_USCOREupdate1(struct soap*, struct _ns1__hbtsf_USCOREupdate1*);
    @endcode

  - <ns1:hbtsf_update1Response> @ref _ns1__hbtsf_USCOREupdate1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hbtsf_USCOREupdate1Response(struct soap*, struct _ns1__hbtsf_USCOREupdate1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hbtsf_USCOREupdate1Response(struct soap*, struct _ns1__hbtsf_USCOREupdate1Response*);
    @endcode

  - <ns1:get_hbfp1> @ref _ns1__get_USCOREhbfp1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbfp1(struct soap*, struct _ns1__get_USCOREhbfp1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbfp1(struct soap*, struct _ns1__get_USCOREhbfp1*);
    @endcode

  - <ns1:get_hbfp1Response> @ref _ns1__get_USCOREhbfp1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREhbfp1Response(struct soap*, struct _ns1__get_USCOREhbfp1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREhbfp1Response(struct soap*, struct _ns1__get_USCOREhbfp1Response*);
    @endcode

  - <ns1:get_yyzd1> @ref _ns1__get_USCOREyyzd1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREyyzd1(struct soap*, struct _ns1__get_USCOREyyzd1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREyyzd1(struct soap*, struct _ns1__get_USCOREyyzd1*);
    @endcode

  - <ns1:get_yyzd1Response> @ref _ns1__get_USCOREyyzd1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREyyzd1Response(struct soap*, struct _ns1__get_USCOREyyzd1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREyyzd1Response(struct soap*, struct _ns1__get_USCOREyyzd1Response*);
    @endcode

  - <ns1:get_yue1> @ref _ns1__get_USCOREyue1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREyue1(struct soap*, struct _ns1__get_USCOREyue1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREyue1(struct soap*, struct _ns1__get_USCOREyue1*);
    @endcode

  - <ns1:get_yue1Response> @ref _ns1__get_USCOREyue1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__get_USCOREyue1Response(struct soap*, struct _ns1__get_USCOREyue1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__get_USCOREyue1Response(struct soap*, struct _ns1__get_USCOREyue1Response*);
    @endcode

  - <ns1:hb_fp_dy_end1> @ref _ns1__hb_USCOREfp_USCOREdy_USCOREend1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hb_USCOREfp_USCOREdy_USCOREend1(struct soap*, struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hb_USCOREfp_USCOREdy_USCOREend1(struct soap*, struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1*);
    @endcode

  - <ns1:hb_fp_dy_end1Response> @ref _ns1__hb_USCOREfp_USCOREdy_USCOREend1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__hb_USCOREfp_USCOREdy_USCOREend1Response(struct soap*, struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__hb_USCOREfp_USCOREdy_USCOREend1Response(struct soap*, struct _ns1__hb_USCOREfp_USCOREdy_USCOREend1Response*);
    @endcode

  - <ns1:TZ_Day1> @ref _ns1__TZ_USCOREDay1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__TZ_USCOREDay1(struct soap*, struct _ns1__TZ_USCOREDay1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__TZ_USCOREDay1(struct soap*, struct _ns1__TZ_USCOREDay1*);
    @endcode

  - <ns1:TZ_Day1Response> @ref _ns1__TZ_USCOREDay1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__TZ_USCOREDay1Response(struct soap*, struct _ns1__TZ_USCOREDay1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__TZ_USCOREDay1Response(struct soap*, struct _ns1__TZ_USCOREDay1Response*);
    @endcode

  - <ns1:m_tz_update1> @ref _ns1__m_USCOREtz_USCOREupdate1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__m_USCOREtz_USCOREupdate1(struct soap*, struct _ns1__m_USCOREtz_USCOREupdate1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__m_USCOREtz_USCOREupdate1(struct soap*, struct _ns1__m_USCOREtz_USCOREupdate1*);
    @endcode

  - <ns1:m_tz_update1Response> @ref _ns1__m_USCOREtz_USCOREupdate1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__m_USCOREtz_USCOREupdate1Response(struct soap*, struct _ns1__m_USCOREtz_USCOREupdate1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__m_USCOREtz_USCOREupdate1Response(struct soap*, struct _ns1__m_USCOREtz_USCOREupdate1Response*);
    @endcode

  - <ns1:long> (use wsdl2h option -g to auto-generate)

  - <ns1:string> (use wsdl2h option -g to auto-generate)

*/

/* End of jnuy.h */
